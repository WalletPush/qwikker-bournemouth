// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/auth/error/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/error">> = Specific
  const handler = {} as typeof import("../../app/auth/error/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/forgot-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/forgot-password">> = Specific
  const handler = {} as typeof import("../../app/auth/forgot-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/login">> = Specific
  const handler = {} as typeof import("../../app/auth/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/sign-up-success/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/sign-up-success">> = Specific
  const handler = {} as typeof import("../../app/auth/sign-up-success/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/sign-up/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/sign-up">> = Specific
  const handler = {} as typeof import("../../app/auth/sign-up/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/update-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/update-password">> = Specific
  const handler = {} as typeof import("../../app/auth/update-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/action-items/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/action-items">> = Specific
  const handler = {} as typeof import("../../app/dashboard/action-items/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/analytics">> = Specific
  const handler = {} as typeof import("../../app/dashboard/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/business/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/business">> = Specific
  const handler = {} as typeof import("../../app/dashboard/business/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/files/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/files">> = Specific
  const handler = {} as typeof import("../../app/dashboard/files/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/loyalty/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/loyalty">> = Specific
  const handler = {} as typeof import("../../app/dashboard/loyalty/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/notifications/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/notifications">> = Specific
  const handler = {} as typeof import("../../app/dashboard/notifications/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/offers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/offers">> = Specific
  const handler = {} as typeof import("../../app/dashboard/offers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/personal/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/personal">> = Specific
  const handler = {} as typeof import("../../app/dashboard/personal/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/referrals/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/referrals">> = Specific
  const handler = {} as typeof import("../../app/dashboard/referrals/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/secret-menu/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/secret-menu">> = Specific
  const handler = {} as typeof import("../../app/dashboard/secret-menu/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/settings">> = Specific
  const handler = {} as typeof import("../../app/dashboard/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/support/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/support">> = Specific
  const handler = {} as typeof import("../../app/dashboard/support/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/debug-supabase/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/debug-supabase">> = Specific
  const handler = {} as typeof import("../../app/debug-supabase/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/onboarding/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/onboarding">> = Specific
  const handler = {} as typeof import("../../app/onboarding/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/onboarding/success/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/onboarding/success">> = Specific
  const handler = {} as typeof import("../../app/onboarding/success/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/protected/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/protected">> = Specific
  const handler = {} as typeof import("../../app/protected/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/user/business/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/business/[slug]">> = Specific
  const handler = {} as typeof import("../../app/user/business/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/user/chat/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/chat">> = Specific
  const handler = {} as typeof import("../../app/user/chat/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/user/credits/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/credits">> = Specific
  const handler = {} as typeof import("../../app/user/credits/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/user/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/dashboard">> = Specific
  const handler = {} as typeof import("../../app/user/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/user/discover/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/discover">> = Specific
  const handler = {} as typeof import("../../app/user/discover/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/user/how-it-works/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/how-it-works">> = Specific
  const handler = {} as typeof import("../../app/user/how-it-works/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/user/offers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/offers">> = Specific
  const handler = {} as typeof import("../../app/user/offers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/user/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user">> = Specific
  const handler = {} as typeof import("../../app/user/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/user/secret-menu/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/secret-menu">> = Specific
  const handler = {} as typeof import("../../app/user/secret-menu/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/user/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/settings">> = Specific
  const handler = {} as typeof import("../../app/user/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/confirm/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/auth/confirm">> = Specific
  const handler = {} as typeof import("../../app/auth/confirm/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
