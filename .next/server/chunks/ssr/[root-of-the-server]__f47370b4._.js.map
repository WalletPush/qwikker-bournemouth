{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/lib/supabase/admin.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n/**\n * Create a Supabase client with service role privileges\n * This bypasses RLS and should only be used for trusted server-side operations\n */\nexport function createAdminClient() {\n  if (!process.env.SUPABASE_SERVICE_ROLE_KEY) {\n    throw new Error('SUPABASE_SERVICE_ROLE_KEY is required for admin operations')\n  }\n\n  return createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.SUPABASE_SERVICE_ROLE_KEY!,\n    {\n      auth: {\n        autoRefreshToken: false,\n        persistSession: false,\n      },\n    }\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;AAMO,SAAS;IACd,IAAI,CAAC,QAAQ,GAAG,CAAC,yBAAyB,EAAE;QAC1C,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,IAAA,iRAAY,gFAEjB,QAAQ,GAAG,CAAC,yBAAyB,EACrC;QACE,MAAM;YACJ,kBAAkB;YAClB,gBAAgB;QAClB;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/lib/integrations.ts"],"sourcesContent":["// Integration utilities for external services\n\n/**\n * Upload file to Cloudinary\n */\nexport async function uploadToCloudinary(file: File, folder = \"qwikker_uploads\"): Promise<string> {\n  const url = `https://api.cloudinary.com/v1_1/dsh32kke7/${file.type.startsWith('image') ? 'image' : 'raw'}/upload`\n\n  const formData = new FormData()\n  formData.append('file', file)\n  formData.append('upload_preset', 'unsigned_qwikker') // This preset must be created in Cloudinary\n  formData.append('folder', folder)\n\n  const response = await fetch(url, {\n    method: 'POST',\n    body: formData\n  })\n\n  if (!response.ok) {\n    throw new Error(`Cloudinary upload failed: ${response.statusText}`)\n  }\n\n  const data = await response.json()\n  return data.secure_url\n}\n\n/**\n * Send data to GoHighLevel webhook\n */\nexport async function sendToGoHighLevel(formData: any): Promise<void> {\n  const webhookUrl = \"https://services.leadconnectorhq.com/hooks/IkBldqzvQG4XkoSxkCq8/webhook-trigger/582275ed-27fe-4374-808b-9f8403f820e3\"\n  \n  const response = await fetch(webhookUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(formData)\n  })\n\n  if (!response.ok) {\n    throw new Error(`GoHighLevel webhook failed: ${response.statusText}`)\n  }\n}\n\n/**\n * Send file update to GoHighLevel using a separate webhook that doesn't trigger signup notifications\n * This function updates contact info only, without triggering new signup workflows\n * \n * TO ENABLE: Set NEXT_PUBLIC_GHL_UPDATE_WEBHOOK_URL in your environment variables\n * with a separate GHL webhook that doesn't send Slack notifications\n */\nexport async function sendFileUpdateToGoHighLevel(formData: any): Promise<void> {\n  // Use a separate webhook URL for updates to avoid signup notifications\n  const updateWebhookUrl = process.env.NEXT_PUBLIC_GHL_UPDATE_WEBHOOK_URL\n  \n  if (!updateWebhookUrl) {\n    console.warn('GHL update webhook not configured - file updates will not sync to GHL')\n    console.warn('To enable GHL sync for file updates, set NEXT_PUBLIC_GHL_UPDATE_WEBHOOK_URL')\n    return\n  }\n  \n  // Add metadata to distinguish this from new signups\n  const updateData = {\n    ...formData,\n    isFileUpdate: true,\n    updateType: 'file_upload',\n    skipSignupNotification: true,\n    // This flag can be used in GHL to filter out signup notifications\n  }\n  \n  const response = await fetch(updateWebhookUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(updateData)\n  })\n\n  if (!response.ok) {\n    throw new Error(`GoHighLevel file update webhook failed: ${response.statusText}`)\n  }\n}\n\n/**\n * Send Slack notification\n */\nexport async function sendSlackNotification(formData: any): Promise<void> {\n  // You'll need to set up a Slack webhook URL in your environment variables\n  const slackWebhookUrl = process.env.NEXT_PUBLIC_SLACK_WEBHOOK_URL\n  \n  if (!slackWebhookUrl) {\n    console.warn('Slack webhook URL not configured')\n    return\n  }\n\n  const message = {\n    text: \"üéâ New QWIKKER Business Signup!\",\n    blocks: [\n      {\n        type: \"header\",\n        text: {\n          type: \"plain_text\",\n          text: \"üéâ New Business Registration\"\n        }\n      },\n      {\n        type: \"section\",\n        fields: [\n          {\n            type: \"mrkdwn\",\n            text: `*Business:* ${formData.businessName || 'Not provided'}`\n          },\n          {\n            type: \"mrkdwn\", \n            text: `*Owner:* ${formData.firstName} ${formData.lastName}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Email:* ${formData.email}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Phone:* ${formData.phone || 'Not provided'}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Location:* ${formData.town}, ${formData.postcode}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Type:* ${formData.businessType || 'Not specified'}`\n          }\n        ]\n      },\n      {\n        type: \"section\",\n        fields: [\n          {\n            type: \"mrkdwn\",\n            text: `*Logo Uploaded:* ${formData.logo_url ? '‚úÖ Yes' : '‚ùå No'}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Menu Uploaded:* ${formData.menuservice_url ? '‚úÖ Yes' : '‚ùå No'}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Offer Created:* ${formData.offerName ? '‚úÖ Yes' : '‚ùå No'}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Referral Source:* ${formData.referralSource || 'Not specified'}`\n          }\n        ]\n      }\n    ]\n  }\n\n  const response = await fetch(slackWebhookUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(message)\n  })\n\n  if (!response.ok) {\n    throw new Error(`Slack notification failed: ${response.statusText}`)\n  }\n}\n\n/**\n * Send Slack notification for important business updates\n */\nexport async function sendBusinessUpdateNotification(profileData: any, updateType: 'file_upload' | 'secret_menu' | 'offer_created' | 'business_info' | 'offer_deleted' | 'secret_menu_deleted' | 'referral_signup' | 'referral_credited', details: any): Promise<void> {\n  const slackWebhookUrl = process.env.NEXT_PUBLIC_SLACK_WEBHOOK_URL\n  \n  if (!slackWebhookUrl) {\n    console.warn('Slack webhook URL not configured')\n    return\n  }\n\n  const businessName = profileData.business_name || 'Unknown Business'\n  const ownerName = `${profileData.first_name || ''} ${profileData.last_name || ''}`.trim() || 'Unknown Owner'\n\n  let message: any\n\n  switch (updateType) {\n    case 'file_upload':\n      message = createFileUploadMessage(businessName, ownerName, details.fileType, details.fileUrl)\n      break\n    case 'secret_menu':\n      message = createSecretMenuMessage(businessName, ownerName, details)\n      break\n    case 'offer_created':\n      message = createOfferMessage(businessName, ownerName, details)\n      break\n    case 'business_info':\n      message = createBusinessInfoMessage(businessName, ownerName, details)\n      break\n    case 'offer_deleted':\n      message = createOfferDeleteMessage(businessName, ownerName, details)\n      break\n    case 'secret_menu_deleted':\n      message = createSecretMenuDeleteMessage(businessName, ownerName, details)\n      break\n    case 'referral_signup':\n      message = createReferralSignupMessage(businessName, ownerName, details)\n      break\n    case 'referral_credited':\n      message = createReferralCreditedMessage(businessName, ownerName, details)\n      break\n    default:\n      return // Skip unknown update types\n  }\n\n  // Add channel and thread targeting\n  const payload = {\n    ...message,\n    channel: \"#business-file-management\", // Specific channel\n    username: \"QWIKKER Bot\",\n    icon_emoji: \":file_folder:\",\n    // thread_ts can be added here if you want to use threads\n  }\n\n  const response = await fetch(slackWebhookUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n\n  if (!response.ok) {\n    throw new Error(`Slack business update notification failed: ${response.statusText}`)\n  }\n}\n\nfunction createFileUploadMessage(businessName: string, ownerName: string, fileType: 'logo' | 'menu' | 'offer', fileUrl: string) {\n  const actions = {\n    logo: `${ownerName} (${businessName}) uploaded a new business logo`,\n    menu: `${ownerName} (${businessName}) uploaded a new menu/price list`, \n    offer: `${ownerName} (${businessName}) uploaded a new offer image`\n  }\n\n  const emojis = {\n    logo: 'üè¢',\n    menu: 'üìã', \n    offer: 'üéØ'\n  }\n\n  return {\n    text: actions[fileType],\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `${emojis[fileType]} ${actions[fileType]}`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `<${fileUrl}|View File> ‚Ä¢ Knowledge base may need updating`\n        }\n      }\n    ]\n  }\n}\n\nfunction createSecretMenuMessage(businessName: string, ownerName: string, details: any) {\n  return {\n    text: `${ownerName} (${businessName}) added a secret menu item`,\n    blocks: [\n      {\n        type: \"section\", \n        text: {\n          type: \"mrkdwn\",\n          text: `ü§´ ${ownerName} (${businessName}) added a secret menu item: *${details.itemName}*`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\", \n          text: `${details.description ? `_\"${details.description}\"_` : ''} ‚Ä¢ Knowledge base update recommended`\n        }\n      }\n    ]\n  }\n}\n\nfunction createOfferMessage(businessName: string, ownerName: string, details: any) {\n  const formatDate = (dateStr: string | null) => {\n    if (!dateStr) return 'Not specified'\n    return new Date(dateStr).toLocaleDateString('en-GB')\n  }\n\n  const claimAmountLabel = details.offerClaimAmount === 'single' ? 'Single Use' : \n                          details.offerClaimAmount === 'multiple' ? 'Multiple Use' : \n                          'Not specified'\n\n  const offerImage = details.offerImage ? \n    `\\n*Offer Image:* <${details.offerImage}|View Image>` : \n    '\\n*Offer Image:* Will be designed by QWIKKER team'\n\n  return {\n    text: `${ownerName} (${businessName}) created a new offer: ${details.offerName}`,\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\", \n          text: `üéØ ${ownerName} (${businessName}) created a new offer: *${details.offerName}*`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*Value:* ${details.offerValue || 'Not specified'}\\n*Type:* ${details.offerType || 'Not specified'}\\n*Claim Amount:* ${claimAmountLabel}\\n*Start Date:* ${formatDate(details.offerStartDate)}\\n*End Date:* ${formatDate(details.offerEndDate)}${offerImage}`\n        }\n      },\n      ...(details.offerTerms ? [{\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*Terms & Conditions:*\\n${details.offerTerms}`\n        }\n      }] : []),\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `Knowledge base update recommended`\n        }\n      }\n    ]\n  }\n}\n\nfunction createBusinessInfoMessage(businessName: string, ownerName: string, details: any) {\n  const importantFields = details.updatedFields.filter((field: string) => \n    !['phone', 'email', 'first_name', 'last_name'].includes(field)\n  )\n  \n  if (importantFields.length === 0) {\n    return null // Skip routine contact updates\n  }\n\n  return {\n    text: `${ownerName} (${businessName}) updated business information`,\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `üìù ${ownerName} (${businessName}) updated: ${importantFields.join(', ')}`\n        }\n      },\n      {\n        type: \"section\", \n        text: {\n          type: \"mrkdwn\",\n          text: `Knowledge base may need updating`\n        }\n      }\n    ]\n  }\n}\n\nfunction createOfferDeleteMessage(businessName: string, ownerName: string, details: any) {\n  return {\n    text: `${ownerName} (${businessName}) deleted an offer: ${details.offerName}`,\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\", \n          text: `üóëÔ∏è ${ownerName} (${businessName}) deleted offer: *${details.offerName}*`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*Previous Value:* ${details.offerValue || 'Not specified'}\\n*Previous Type:* ${details.offerType || 'Not specified'}`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `Knowledge base update recommended - offer no longer available`\n        }\n      }\n    ]\n  }\n}\n\nfunction createSecretMenuDeleteMessage(businessName: string, ownerName: string, details: any) {\n  return {\n    text: `${ownerName} (${businessName}) removed secret menu item: ${details.itemName}`,\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\", \n          text: `üóëÔ∏è ${ownerName} (${businessName}) removed secret menu item: *${details.itemName}*`\n        }\n      },\n      ...(details.description ? [{\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*Previous Description:* ${details.description}`\n        }\n      }] : []),\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `Knowledge base update recommended - item no longer available`\n        }\n      }\n    ]\n  }\n}\n\nfunction createReferralSignupMessage(businessName: string, ownerName: string, details: any) {\n  return {\n    text: `${ownerName} (${businessName}) referred a new business: ${details.referredBusinessName}`,\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\", \n          text: `üéâ ${ownerName} (${businessName}) referred a new business!`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*New Business:* ${details.referredBusinessName}\\n*Owner:* ${details.referredOwnerName}\\n*Referral Code:* ${details.referralCode}`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `Potential ¬£10 reward pending business activation ‚Ä¢ Monitor for conversion`\n        }\n      }\n    ]\n  }\n}\n\nfunction createReferralCreditedMessage(businessName: string, ownerName: string, details: any) {\n  return {\n    text: `${ownerName} (${businessName}) earned referral reward for ${details.referredBusinessName}`,\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\", \n          text: `üí∞ Referral reward credited to ${ownerName} (${businessName})`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*Referred Business:* ${details.referredBusinessName}\\n*Reward Amount:* ${details.currency === 'GBP' ? '¬£' : '$'}${details.rewardAmount}`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `Successful referral conversion ‚Ä¢ Reward processed`\n        }\n      }\n    ]\n  }\n}\n\n/**\n * Legacy function - use sendBusinessUpdateNotification instead\n * @deprecated\n */\nexport async function sendProfileUpdateSlackNotification(profileData: any, updatedFields: string[]): Promise<void> {\n  // Redirect to new notification system\n  return sendBusinessUpdateNotification(profileData, 'business_info', { updatedFields })\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/lib/actions/business-actions.ts"],"sourcesContent":["'use server'\n\nimport { createAdminClient } from '@/lib/supabase/admin'\nimport { sendBusinessUpdateNotification } from '@/lib/integrations'\nimport { revalidatePath } from 'next/cache'\n\n/**\n * Add a secret menu item and notify Slack\n */\nexport async function addSecretMenuItem(userId: string, itemData: {\n  itemName: string\n  description?: string\n  price?: string\n}) {\n  const supabaseAdmin = createAdminClient()\n\n  // Get user profile for notification context\n  const { data: profile, error: profileError } = await supabaseAdmin\n    .from('profiles')\n    .select('*')\n    .eq('user_id', userId)\n    .single()\n\n  if (profileError || !profile) {\n    return { success: false, error: 'Profile not found' }\n  }\n\n  // For now, store secret menu items in additional_notes or create a separate table\n  // This is a placeholder - you might want a dedicated secret_menu_items table\n  const secretMenuData = {\n    ...itemData,\n    created_at: new Date().toISOString()\n  }\n\n  // Update profile with secret menu item (stored as JSON in additional_notes for now)\n  const currentNotes = profile.additional_notes || '{}'\n  let notesData\n  try {\n    notesData = JSON.parse(currentNotes)\n  } catch {\n    notesData = {}\n  }\n\n  if (!notesData.secret_menu_items) {\n    notesData.secret_menu_items = []\n  }\n  notesData.secret_menu_items.push(secretMenuData)\n\n  const { error: updateError } = await supabaseAdmin\n    .from('profiles')\n    .update({ additional_notes: JSON.stringify(notesData) })\n    .eq('user_id', userId)\n\n  if (updateError) {\n    return { success: false, error: updateError.message }\n  }\n\n  // Send Slack notification\n  try {\n    await sendBusinessUpdateNotification(profile, 'secret_menu', itemData)\n  } catch (error) {\n    console.error('Slack notification failed (non-critical):', error)\n  }\n\n  revalidatePath('/dashboard')\n  return { success: true, data: secretMenuData }\n}\n\n/**\n * Create a new offer and notify Slack\n */\nexport async function createOffer(userId: string, offerData: {\n  offerName: string\n  offerType: string\n  offerValue: string\n  offerClaimAmount?: string\n  offerTerms?: string\n  startDate?: string\n  endDate?: string\n  offerImage?: string | null\n}) {\n  const supabaseAdmin = createAdminClient()\n\n  // Update profile with offer data\n  const { data: profile, error } = await supabaseAdmin\n    .from('profiles')\n    .update({\n      offer_name: offerData.offerName,\n      offer_type: offerData.offerType,\n      offer_value: offerData.offerValue,\n      offer_claim_amount: offerData.offerClaimAmount,\n      offer_terms: offerData.offerTerms,\n      offer_start_date: offerData.startDate,\n      offer_end_date: offerData.endDate,\n      offer_image: offerData.offerImage\n    })\n    .eq('user_id', userId)\n    .select()\n    .single()\n\n  if (error) {\n    return { success: false, error: error.message }\n  }\n\n  // Send Slack notification with all offer details\n  try {\n    await sendBusinessUpdateNotification(profile, 'offer_created', {\n      offerName: offerData.offerName,\n      offerType: offerData.offerType,\n      offerValue: offerData.offerValue,\n      offerClaimAmount: offerData.offerClaimAmount,\n      offerStartDate: offerData.startDate,\n      offerEndDate: offerData.endDate,\n      offerTerms: offerData.offerTerms,\n      offerImage: offerData.offerImage\n    })\n  } catch (error) {\n    console.error('Slack notification failed (non-critical):', error)\n  }\n\n  revalidatePath('/dashboard')\n  return { success: true, data: profile }\n}\n\n/**\n * Update important business information and notify Slack\n */\nexport async function updateBusinessInfo(userId: string, updates: any) {\n  const supabaseAdmin = createAdminClient()\n\n  // Filter out routine contact updates that don't need notifications\n  const routineFields = ['phone', 'email', 'first_name', 'last_name']\n  const importantUpdates = Object.keys(updates).filter(key => !routineFields.includes(key))\n\n  const { data: profile, error } = await supabaseAdmin\n    .from('profiles')\n    .update(updates)\n    .eq('user_id', userId)\n    .select()\n    .single()\n\n  if (error) {\n    return { success: false, error: error.message }\n  }\n\n  // Only send notification if important fields were updated\n  if (importantUpdates.length > 0) {\n    try {\n      await sendBusinessUpdateNotification(profile, 'business_info', { \n        updatedFields: importantUpdates \n      })\n    } catch (error) {\n      console.error('Slack notification failed (non-critical):', error)\n    }\n  }\n\n  revalidatePath('/dashboard')\n  return { success: true, data: profile }\n}\n\n/**\n * Delete an offer and notify Slack\n */\nexport async function deleteOffer(userId: string) {\n  const supabaseAdmin = createAdminClient()\n\n  // Get the current offer details for the notification\n  const { data: currentProfile, error: fetchError } = await supabaseAdmin\n    .from('profiles')\n    .select('*')\n    .eq('user_id', userId)\n    .single()\n\n  if (fetchError || !currentProfile) {\n    return { success: false, error: 'Profile not found' }\n  }\n\n  // Store offer details before deletion for notification\n  const deletedOffer = {\n    offerName: currentProfile.offer_name,\n    offerType: currentProfile.offer_type,\n    offerValue: currentProfile.offer_value,\n  }\n\n  // Clear offer data from profile\n  const { data: profile, error } = await supabaseAdmin\n    .from('profiles')\n    .update({\n      offer_name: null,\n      offer_type: null,\n      offer_value: null,\n      offer_claim_amount: null,\n      offer_terms: null,\n      offer_start_date: null,\n      offer_end_date: null,\n      offer_image: null\n    })\n    .eq('user_id', userId)\n    .select()\n    .single()\n\n  if (error) {\n    return { success: false, error: error.message }\n  }\n\n  // Send Slack notification about deletion\n  try {\n    await sendBusinessUpdateNotification(profile, 'offer_deleted', deletedOffer)\n  } catch (error) {\n    console.error('Slack notification failed (non-critical):', error)\n  }\n\n  revalidatePath('/dashboard')\n  revalidatePath('/dashboard/offers')\n  return { success: true, data: profile }\n}\n\n/**\n * Delete a secret menu item and notify Slack\n */\nexport async function deleteSecretMenuItem(userId: string, itemId: string) {\n  const supabaseAdmin = createAdminClient()\n\n  // Get current profile data\n  const { data: profile, error: profileError } = await supabaseAdmin\n    .from('profiles')\n    .select('*')\n    .eq('user_id', userId)\n    .single()\n\n  if (profileError || !profile) {\n    return { success: false, error: 'Profile not found' }\n  }\n\n  // Parse current secret menu items\n  const currentNotes = profile.additional_notes || '{}'\n  let notesData\n  try {\n    notesData = JSON.parse(currentNotes)\n  } catch {\n    notesData = {}\n  }\n\n  if (!notesData.secret_menu_items || !Array.isArray(notesData.secret_menu_items)) {\n    return { success: false, error: 'No secret menu items found' }\n  }\n\n  // Find the item to delete\n  const itemIndex = notesData.secret_menu_items.findIndex((item: any) => \n    item.created_at === itemId || item.itemName === itemId\n  )\n\n  if (itemIndex === -1) {\n    return { success: false, error: 'Secret menu item not found' }\n  }\n\n  // Store deleted item details for notification\n  const deletedItem = notesData.secret_menu_items[itemIndex]\n\n  // Remove the item\n  notesData.secret_menu_items.splice(itemIndex, 1)\n\n  // Update profile with modified secret menu items\n  const { error: updateError } = await supabaseAdmin\n    .from('profiles')\n    .update({ additional_notes: JSON.stringify(notesData) })\n    .eq('user_id', userId)\n\n  if (updateError) {\n    return { success: false, error: updateError.message }\n  }\n\n  // Send Slack notification about deletion\n  try {\n    await sendBusinessUpdateNotification(profile, 'secret_menu_deleted', deletedItem)\n  } catch (error) {\n    console.error('Slack notification failed (non-critical):', error)\n  }\n\n  revalidatePath('/dashboard')\n  revalidatePath('/dashboard/secret-menu')\n  return { success: true, data: deletedItem }\n}\n\n/**\n * Submit business listing for admin review\n */\nexport async function submitBusinessForReview(userId: string) {\n  const supabaseAdmin = createAdminClient()\n\n  try {\n    // Update status to pending_review\n    const { error: updateError } = await supabaseAdmin\n      .from('profiles')\n      .update({ \n        status: 'pending_review',\n        submitted_at: new Date().toISOString()\n      })\n      .eq('user_id', userId)\n\n    if (updateError) {\n      console.error('Error updating profile status:', updateError)\n      return { success: false, error: 'Failed to submit for review' }\n    }\n\n    // Get profile data for notification\n    const { data: profile, error: profileError } = await supabaseAdmin\n      .from('profiles')\n      .select('*')\n      .eq('user_id', userId)\n      .single()\n\n    if (profileError || !profile) {\n      console.error('Error fetching profile:', profileError)\n      return { success: false, error: 'Profile not found' }\n    }\n\n    // Send notification to admin (you can implement this later)\n    try {\n      await sendBusinessUpdateNotification({\n        businessName: profile.business_name || 'New Business',\n        businessType: profile.business_type || 'Business',\n        action: 'SUBMITTED_FOR_REVIEW',\n        userId: userId,\n        email: profile.email || 'No email',\n        town: profile.business_town || 'Unknown location'\n      })\n    } catch (notificationError) {\n      console.error('Notification failed:', notificationError)\n      // Don't fail the whole operation if notification fails\n    }\n\n    revalidatePath('/dashboard')\n    return { success: true, message: 'Successfully submitted for review!' }\n\n  } catch (error) {\n    console.error('Submit for review error:', error)\n    return { success: false, error: 'Failed to submit for review' }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 834, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/.next-internal/server/app/dashboard/secret-menu/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {addSecretMenuItem as '60018773fd9b11481ffb12600c6032a5613918a812'} from 'ACTIONS_MODULE0'\nexport {deleteSecretMenuItem as '60c810bc0ce80aa166c50eda23642390059c3bda5c'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 862, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/lib/supabase/server.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { cookies } from 'next/headers'\n\n/**\n * Always create a new client inside each request\n */\nexport async function createClient() {\n  const cookieStore = await cookies()\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll()\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            )\n          } catch {\n            // ignore when running inside a Server Component\n          }\n        },\n      },\n    }\n  )\n}"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;AAKO,eAAe;IACpB,MAAM,cAAc,MAAM,IAAA,yQAAO;IAEjC,OAAO,IAAA,4SAAkB,sUAGvB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,gDAAgD;gBAClD;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 892, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/dashboard-layout.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DashboardLayout = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardLayout() from the server but DashboardLayout is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard/dashboard-layout.tsx <module evaluation>\",\n    \"DashboardLayout\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,uYAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 906, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/dashboard-layout.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DashboardLayout = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardLayout() from the server but DashboardLayout is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard/dashboard-layout.tsx\",\n    \"DashboardLayout\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,uYAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,uDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 920, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 928, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/secret-menu-page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SecretMenuPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call SecretMenuPage() from the server but SecretMenuPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard/secret-menu-page.tsx <module evaluation>\",\n    \"SecretMenuPage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,iBAAiB,IAAA,uYAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 942, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/secret-menu-page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SecretMenuPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call SecretMenuPage() from the server but SecretMenuPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard/secret-menu-page.tsx\",\n    \"SecretMenuPage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,iBAAiB,IAAA,uYAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,uDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 956, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 964, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/app/dashboard/secret-menu/page.tsx"],"sourcesContent":["import { redirect } from 'next/navigation'\nimport { createClient } from '@/lib/supabase/server'\nimport { DashboardLayout } from '@/components/dashboard/dashboard-layout'\nimport { SecretMenuPage } from '@/components/dashboard/secret-menu-page'\nimport { Profile } from '@/types/profiles'\n\nexport default async function DashboardSecretMenuPage() {\n  const supabase = await createClient()\n\n  const { data, error } = await supabase.auth.getClaims()\n  if (error || !data?.claims) {\n    redirect('/auth/login')\n  }\n\n  const { data: profileData, error: profileError } = await supabase\n    .from('profiles')\n    .select('*')\n    .eq('user_id', data.claims.sub)\n    .single()\n\n  if (profileError || !profileData) {\n    console.error('Error fetching profile:', profileError)\n    redirect('/onboarding')\n  }\n\n  const profile: Profile = profileData\n\n  return (\n    <DashboardLayout currentSection=\"secret-menu\" profile={profile}>\n      <SecretMenuPage profile={profile} />\n    </DashboardLayout>\n  )\n}\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAGe,eAAe;IAC5B,MAAM,WAAW,MAAM,IAAA,yIAAY;IAEnC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,SAAS;IACrD,IAAI,SAAS,CAAC,MAAM,QAAQ;QAC1B,IAAA,gUAAQ,EAAC;IACX;IAEA,MAAM,EAAE,MAAM,WAAW,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,SACtD,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,WAAW,KAAK,MAAM,CAAC,GAAG,EAC7B,MAAM;IAET,IAAI,gBAAgB,CAAC,aAAa;QAChC,QAAQ,KAAK,CAAC,2BAA2B;QACzC,IAAA,gUAAQ,EAAC;IACX;IAEA,MAAM,UAAmB;IAEzB,qBACE,6WAAC,kKAAe;QAAC,gBAAe;QAAc,SAAS;kBACrD,cAAA,6WAAC,oKAAc;YAAC,SAAS;;;;;;;;;;;AAG/B","debugId":null}}]
}