{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/lib/supabase/server.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { cookies } from 'next/headers'\n\n/**\n * Always create a new client inside each request\n */\nexport async function createClient() {\n  const cookieStore = await cookies()\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll()\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            )\n          } catch {\n            // ignore when running inside a Server Component\n          }\n        },\n      },\n    }\n  )\n}"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;AAKO,eAAe;IACpB,MAAM,cAAc,MAAM,IAAA,yQAAO;IAEjC,OAAO,IAAA,4SAAkB,sUAGvB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,gDAAgD;gBAClD;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/dashboard-layout.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DashboardLayout = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardLayout() from the server but DashboardLayout is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard/dashboard-layout.tsx <module evaluation>\",\n    \"DashboardLayout\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,uYAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/dashboard-layout.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DashboardLayout = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardLayout() from the server but DashboardLayout is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard/dashboard-layout.tsx\",\n    \"DashboardLayout\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,uYAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,uDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/action-items-page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ActionItemsPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call ActionItemsPage() from the server but ActionItemsPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard/action-items-page.tsx <module evaluation>\",\n    \"ActionItemsPage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,uYAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,4EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/action-items-page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ActionItemsPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call ActionItemsPage() from the server but ActionItemsPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard/action-items-page.tsx\",\n    \"ActionItemsPage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,uYAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,wDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/app/dashboard/action-items/page.tsx"],"sourcesContent":["import { redirect } from 'next/navigation'\nimport { createClient } from '@/lib/supabase/server'\nimport { DashboardLayout } from '@/components/dashboard/dashboard-layout'\nimport { ActionItemsPage } from '@/components/dashboard/action-items-page'\nimport { Profile } from '@/types/profiles'\n\nexport default async function DashboardActionItemsPage() {\n  const supabase = await createClient()\n\n  const { data, error } = await supabase.auth.getClaims()\n  if (error || !data?.claims) {\n    redirect('/auth/login')\n  }\n\n  const { data: profileData, error: profileError } = await supabase\n    .from('profiles')\n    .select('*')\n    .eq('user_id', data.claims.sub)\n    .single()\n\n  if (profileError || !profileData) {\n    console.error('Error fetching profile:', profileError)\n    redirect('/onboarding')\n  }\n\n  const profile: Profile = profileData\n\n  return (\n    <DashboardLayout currentSection=\"action-items\" profile={profile}>\n      <ActionItemsPage profile={profile} />\n    </DashboardLayout>\n  )\n}\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAGe,eAAe;IAC5B,MAAM,WAAW,MAAM,IAAA,yIAAY;IAEnC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,SAAS;IACrD,IAAI,SAAS,CAAC,MAAM,QAAQ;QAC1B,IAAA,gUAAQ,EAAC;IACX;IAEA,MAAM,EAAE,MAAM,WAAW,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,SACtD,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,WAAW,KAAK,MAAM,CAAC,GAAG,EAC7B,MAAM;IAET,IAAI,gBAAgB,CAAC,aAAa;QAChC,QAAQ,KAAK,CAAC,2BAA2B;QACzC,IAAA,gUAAQ,EAAC;IACX;IAEA,MAAM,UAAmB;IAEzB,qBACE,6WAAC,kKAAe;QAAC,gBAAe;QAAe,SAAS;kBACtD,cAAA,6WAAC,sKAAe;YAAC,SAAS;;;;;;;;;;;AAGhC","debugId":null}}]
}