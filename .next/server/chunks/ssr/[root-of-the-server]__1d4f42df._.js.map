{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/lib/supabase/admin.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n/**\n * Create a Supabase client with service role privileges\n * This bypasses RLS and should only be used for trusted server-side operations\n */\nexport function createAdminClient() {\n  if (!process.env.SUPABASE_SERVICE_ROLE_KEY) {\n    throw new Error('SUPABASE_SERVICE_ROLE_KEY is required for admin operations')\n  }\n\n  return createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.SUPABASE_SERVICE_ROLE_KEY!,\n    {\n      auth: {\n        autoRefreshToken: false,\n        persistSession: false,\n      },\n    }\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;AAMO,SAAS;IACd,IAAI,CAAC,QAAQ,GAAG,CAAC,yBAAyB,EAAE;QAC1C,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,IAAA,iRAAY,gFAEjB,QAAQ,GAAG,CAAC,yBAAyB,EACrC;QACE,MAAM;YACJ,kBAAkB;YAClB,gBAAgB;QAClB;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/lib/integrations.ts"],"sourcesContent":["// Integration utilities for external services\n\n/**\n * Upload file to Cloudinary\n */\nexport async function uploadToCloudinary(file: File, folder = \"qwikker_uploads\"): Promise<string> {\n  const url = `https://api.cloudinary.com/v1_1/dsh32kke7/${file.type.startsWith('image') ? 'image' : 'raw'}/upload`\n\n  const formData = new FormData()\n  formData.append('file', file)\n  formData.append('upload_preset', 'unsigned_qwikker') // This preset must be created in Cloudinary\n  formData.append('folder', folder)\n\n  const response = await fetch(url, {\n    method: 'POST',\n    body: formData\n  })\n\n  if (!response.ok) {\n    throw new Error(`Cloudinary upload failed: ${response.statusText}`)\n  }\n\n  const data = await response.json()\n  return data.secure_url\n}\n\n/**\n * Send data to GoHighLevel webhook\n */\nexport async function sendToGoHighLevel(formData: any): Promise<void> {\n  const webhookUrl = \"https://services.leadconnectorhq.com/hooks/IkBldqzvQG4XkoSxkCq8/webhook-trigger/582275ed-27fe-4374-808b-9f8403f820e3\"\n  \n  const response = await fetch(webhookUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(formData)\n  })\n\n  if (!response.ok) {\n    throw new Error(`GoHighLevel webhook failed: ${response.statusText}`)\n  }\n}\n\n/**\n * Send file update to GoHighLevel using a separate webhook that doesn't trigger signup notifications\n * This function updates contact info only, without triggering new signup workflows\n * \n * TO ENABLE: Set NEXT_PUBLIC_GHL_UPDATE_WEBHOOK_URL in your environment variables\n * with a separate GHL webhook that doesn't send Slack notifications\n */\nexport async function sendFileUpdateToGoHighLevel(formData: any): Promise<void> {\n  // Use a separate webhook URL for updates to avoid signup notifications\n  const updateWebhookUrl = process.env.NEXT_PUBLIC_GHL_UPDATE_WEBHOOK_URL\n  \n  if (!updateWebhookUrl) {\n    console.warn('GHL update webhook not configured - file updates will not sync to GHL')\n    console.warn('To enable GHL sync for file updates, set NEXT_PUBLIC_GHL_UPDATE_WEBHOOK_URL')\n    return\n  }\n  \n  // Add metadata to distinguish this from new signups\n  const updateData = {\n    ...formData,\n    isFileUpdate: true,\n    updateType: 'file_upload',\n    skipSignupNotification: true,\n    // This flag can be used in GHL to filter out signup notifications\n  }\n  \n  const response = await fetch(updateWebhookUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(updateData)\n  })\n\n  if (!response.ok) {\n    throw new Error(`GoHighLevel file update webhook failed: ${response.statusText}`)\n  }\n}\n\n/**\n * Send Slack notification\n */\nexport async function sendSlackNotification(formData: any): Promise<void> {\n  // You'll need to set up a Slack webhook URL in your environment variables\n  const slackWebhookUrl = process.env.NEXT_PUBLIC_SLACK_WEBHOOK_URL\n  \n  if (!slackWebhookUrl) {\n    console.warn('Slack webhook URL not configured')\n    return\n  }\n\n  const message = {\n    text: \"üéâ New QWIKKER Business Signup!\",\n    blocks: [\n      {\n        type: \"header\",\n        text: {\n          type: \"plain_text\",\n          text: \"üéâ New Business Registration\"\n        }\n      },\n      {\n        type: \"section\",\n        fields: [\n          {\n            type: \"mrkdwn\",\n            text: `*Business:* ${formData.businessName || 'Not provided'}`\n          },\n          {\n            type: \"mrkdwn\", \n            text: `*Owner:* ${formData.firstName} ${formData.lastName}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Email:* ${formData.email}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Phone:* ${formData.phone || 'Not provided'}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Location:* ${formData.town}, ${formData.postcode}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Type:* ${formData.businessType || 'Not specified'}`\n          }\n        ]\n      },\n      {\n        type: \"section\",\n        fields: [\n          {\n            type: \"mrkdwn\",\n            text: `*Logo Uploaded:* ${formData.logo_url ? '‚úÖ Yes' : '‚ùå No'}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Menu Uploaded:* ${formData.menuservice_url ? '‚úÖ Yes' : '‚ùå No'}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Offer Created:* ${formData.offerName ? '‚úÖ Yes' : '‚ùå No'}`\n          },\n          {\n            type: \"mrkdwn\",\n            text: `*Referral Source:* ${formData.referralSource || 'Not specified'}`\n          }\n        ]\n      }\n    ]\n  }\n\n  const response = await fetch(slackWebhookUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(message)\n  })\n\n  if (!response.ok) {\n    throw new Error(`Slack notification failed: ${response.statusText}`)\n  }\n}\n\n/**\n * Send Slack notification for important business updates\n */\nexport async function sendBusinessUpdateNotification(profileData: any, updateType: 'file_upload' | 'secret_menu' | 'offer_created' | 'business_info' | 'offer_deleted' | 'secret_menu_deleted' | 'referral_signup' | 'referral_credited', details: any): Promise<void> {\n  const slackWebhookUrl = process.env.NEXT_PUBLIC_SLACK_WEBHOOK_URL\n  \n  if (!slackWebhookUrl) {\n    console.warn('Slack webhook URL not configured')\n    return\n  }\n\n  const businessName = profileData.business_name || 'Unknown Business'\n  const ownerName = `${profileData.first_name || ''} ${profileData.last_name || ''}`.trim() || 'Unknown Owner'\n\n  let message: any\n\n  switch (updateType) {\n    case 'file_upload':\n      message = createFileUploadMessage(businessName, ownerName, details.fileType, details.fileUrl)\n      break\n    case 'secret_menu':\n      message = createSecretMenuMessage(businessName, ownerName, details)\n      break\n    case 'offer_created':\n      message = createOfferMessage(businessName, ownerName, details)\n      break\n    case 'business_info':\n      message = createBusinessInfoMessage(businessName, ownerName, details)\n      break\n    case 'offer_deleted':\n      message = createOfferDeleteMessage(businessName, ownerName, details)\n      break\n    case 'secret_menu_deleted':\n      message = createSecretMenuDeleteMessage(businessName, ownerName, details)\n      break\n    case 'referral_signup':\n      message = createReferralSignupMessage(businessName, ownerName, details)\n      break\n    case 'referral_credited':\n      message = createReferralCreditedMessage(businessName, ownerName, details)\n      break\n    default:\n      return // Skip unknown update types\n  }\n\n  // Add channel and thread targeting\n  const payload = {\n    ...message,\n    channel: \"#business-file-management\", // Specific channel\n    username: \"QWIKKER Bot\",\n    icon_emoji: \":file_folder:\",\n    // thread_ts can be added here if you want to use threads\n  }\n\n  const response = await fetch(slackWebhookUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n\n  if (!response.ok) {\n    throw new Error(`Slack business update notification failed: ${response.statusText}`)\n  }\n}\n\nfunction createFileUploadMessage(businessName: string, ownerName: string, fileType: 'logo' | 'menu' | 'offer', fileUrl: string) {\n  const actions = {\n    logo: `${ownerName} (${businessName}) uploaded a new business logo`,\n    menu: `${ownerName} (${businessName}) uploaded a new menu/price list`, \n    offer: `${ownerName} (${businessName}) uploaded a new offer image`\n  }\n\n  const emojis = {\n    logo: 'üè¢',\n    menu: 'üìã', \n    offer: 'üéØ'\n  }\n\n  return {\n    text: actions[fileType],\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `${emojis[fileType]} ${actions[fileType]}`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `<${fileUrl}|View File> ‚Ä¢ Knowledge base may need updating`\n        }\n      }\n    ]\n  }\n}\n\nfunction createSecretMenuMessage(businessName: string, ownerName: string, details: any) {\n  return {\n    text: `${ownerName} (${businessName}) added a secret menu item`,\n    blocks: [\n      {\n        type: \"section\", \n        text: {\n          type: \"mrkdwn\",\n          text: `ü§´ ${ownerName} (${businessName}) added a secret menu item: *${details.itemName}*`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\", \n          text: `${details.description ? `_\"${details.description}\"_` : ''} ‚Ä¢ Knowledge base update recommended`\n        }\n      }\n    ]\n  }\n}\n\nfunction createOfferMessage(businessName: string, ownerName: string, details: any) {\n  const formatDate = (dateStr: string | null) => {\n    if (!dateStr) return 'Not specified'\n    return new Date(dateStr).toLocaleDateString('en-GB')\n  }\n\n  const claimAmountLabel = details.offerClaimAmount === 'single' ? 'Single Use' : \n                          details.offerClaimAmount === 'multiple' ? 'Multiple Use' : \n                          'Not specified'\n\n  const offerImage = details.offerImage ? \n    `\\n*Offer Image:* <${details.offerImage}|View Image>` : \n    '\\n*Offer Image:* Will be designed by QWIKKER team'\n\n  return {\n    text: `${ownerName} (${businessName}) created a new offer: ${details.offerName}`,\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\", \n          text: `üéØ ${ownerName} (${businessName}) created a new offer: *${details.offerName}*`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*Value:* ${details.offerValue || 'Not specified'}\\n*Type:* ${details.offerType || 'Not specified'}\\n*Claim Amount:* ${claimAmountLabel}\\n*Start Date:* ${formatDate(details.offerStartDate)}\\n*End Date:* ${formatDate(details.offerEndDate)}${offerImage}`\n        }\n      },\n      ...(details.offerTerms ? [{\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*Terms & Conditions:*\\n${details.offerTerms}`\n        }\n      }] : []),\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `Knowledge base update recommended`\n        }\n      }\n    ]\n  }\n}\n\nfunction createBusinessInfoMessage(businessName: string, ownerName: string, details: any) {\n  const importantFields = details.updatedFields.filter((field: string) => \n    !['phone', 'email', 'first_name', 'last_name'].includes(field)\n  )\n  \n  if (importantFields.length === 0) {\n    return null // Skip routine contact updates\n  }\n\n  return {\n    text: `${ownerName} (${businessName}) updated business information`,\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `üìù ${ownerName} (${businessName}) updated: ${importantFields.join(', ')}`\n        }\n      },\n      {\n        type: \"section\", \n        text: {\n          type: \"mrkdwn\",\n          text: `Knowledge base may need updating`\n        }\n      }\n    ]\n  }\n}\n\nfunction createOfferDeleteMessage(businessName: string, ownerName: string, details: any) {\n  return {\n    text: `${ownerName} (${businessName}) deleted an offer: ${details.offerName}`,\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\", \n          text: `üóëÔ∏è ${ownerName} (${businessName}) deleted offer: *${details.offerName}*`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*Previous Value:* ${details.offerValue || 'Not specified'}\\n*Previous Type:* ${details.offerType || 'Not specified'}`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `Knowledge base update recommended - offer no longer available`\n        }\n      }\n    ]\n  }\n}\n\nfunction createSecretMenuDeleteMessage(businessName: string, ownerName: string, details: any) {\n  return {\n    text: `${ownerName} (${businessName}) removed secret menu item: ${details.itemName}`,\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\", \n          text: `üóëÔ∏è ${ownerName} (${businessName}) removed secret menu item: *${details.itemName}*`\n        }\n      },\n      ...(details.description ? [{\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*Previous Description:* ${details.description}`\n        }\n      }] : []),\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `Knowledge base update recommended - item no longer available`\n        }\n      }\n    ]\n  }\n}\n\nfunction createReferralSignupMessage(businessName: string, ownerName: string, details: any) {\n  return {\n    text: `${ownerName} (${businessName}) referred a new business: ${details.referredBusinessName}`,\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\", \n          text: `üéâ ${ownerName} (${businessName}) referred a new business!`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*New Business:* ${details.referredBusinessName}\\n*Owner:* ${details.referredOwnerName}\\n*Referral Code:* ${details.referralCode}`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `Potential ¬£10 reward pending business activation ‚Ä¢ Monitor for conversion`\n        }\n      }\n    ]\n  }\n}\n\nfunction createReferralCreditedMessage(businessName: string, ownerName: string, details: any) {\n  return {\n    text: `${ownerName} (${businessName}) earned referral reward for ${details.referredBusinessName}`,\n    blocks: [\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\", \n          text: `üí∞ Referral reward credited to ${ownerName} (${businessName})`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*Referred Business:* ${details.referredBusinessName}\\n*Reward Amount:* ${details.currency === 'GBP' ? '¬£' : '$'}${details.rewardAmount}`\n        }\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `Successful referral conversion ‚Ä¢ Reward processed`\n        }\n      }\n    ]\n  }\n}\n\n/**\n * Legacy function - use sendBusinessUpdateNotification instead\n * @deprecated\n */\nexport async function sendProfileUpdateSlackNotification(profileData: any, updatedFields: string[]): Promise<void> {\n  // Redirect to new notification system\n  return sendBusinessUpdateNotification(profileData, 'business_info', { updatedFields })\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/lib/actions/file-actions.ts"],"sourcesContent":["'use server'\n\nimport { createAdminClient } from '@/lib/supabase/admin'\nimport { revalidatePath } from 'next/cache'\nimport { sendFileUpdateToGoHighLevel, sendBusinessUpdateNotification } from '@/lib/integrations'\n\nexport async function updateProfileFile(userId: string, fileType: 'logo' | 'menu' | 'offer', fileUrl: string) {\n  const supabaseAdmin = createAdminClient()\n\n  const updateData: any = {}\n  \n  // Map file types to profile fields\n  switch (fileType) {\n    case 'logo':\n      updateData.logo = fileUrl\n      break\n    case 'menu':\n      updateData.menu_url = fileUrl\n      break\n    case 'offer':\n      updateData.offer_image = fileUrl\n      break\n  }\n\n  const { data, error } = await supabaseAdmin\n    .from('profiles')\n    .update(updateData)\n    .eq('user_id', userId)\n    .select()\n    .single()\n\n  if (error) {\n    console.error('Error updating profile file:', error)\n    return { success: false, error: error.message }\n  }\n\n  // Revalidate the dashboard and files pages to show updated data\n  revalidatePath('/dashboard')\n  revalidatePath('/dashboard/files')\n\n  // Send Slack notification for knowledge base updates (non-blocking)\n  // Note: GHL sync temporarily disabled to prevent false signup notifications\n  sendBusinessUpdateNotification(data, 'file_upload', { fileType, fileUrl }).catch(error => \n    console.error('Slack notification failed (non-critical):', error)\n  )\n\n  return { success: true, data }\n}\n\nexport async function uploadToCloudinary(file: File, folder: string = 'qwikker_uploads') {\n  const formData = new FormData()\n  formData.append('file', file)\n  formData.append('upload_preset', 'unsigned_qwikker') // This preset must be created in Cloudinary\n  formData.append('folder', folder)\n\n  const url = `https://api.cloudinary.com/v1_1/dsh32kke7/${file.type.startsWith('image') ? 'image' : 'raw'}/upload`\n\n  const response = await fetch(url, {\n    method: 'POST',\n    body: formData\n  })\n\n  if (!response.ok) {\n    throw new Error('Upload failed')\n  }\n\n  const data = await response.json()\n  \n  // Optional: Also backup to Supabase Storage for redundancy\n  // Note: This requires the userId to be passed, for now we'll skip the backup\n  // The backup can be implemented when we have access to the user context\n  try {\n    // await backupToSupabaseStorage(file, folder, data.public_id, userId)\n    console.log('Supabase backup skipped - requires user context')\n  } catch (error) {\n    console.warn('Supabase backup failed (non-critical):', error)\n  }\n  \n  return data.secure_url\n}\n\nasync function backupToSupabaseStorage(file: File, folder: string, publicId: string, userId: string) {\n  const supabaseAdmin = createAdminClient()\n  \n  // Create a user-specific folder structure for RLS compliance\n  const fileName = `${publicId}_${file.name}`\n  const filePath = `${userId}/${folder}/${fileName}`\n  \n  const { error } = await supabaseAdmin.storage\n    .from('business-files')\n    .upload(filePath, file, {\n      cacheControl: '3600',\n      upsert: false\n    })\n  \n  if (error) {\n    throw error\n  }\n  \n  console.log(`File backed up to Supabase Storage: ${filePath}`)\n}\n\nasync function syncFileUpdateWithGHL(profileData: any, fileType: 'logo' | 'menu' | 'offer', fileUrl: string) {\n  // Prepare GHL data structure matching the onboarding form format\n  const ghlData = {\n    // Basic profile info\n    firstName: profileData.first_name || '',\n    lastName: profileData.last_name || '',\n    email: profileData.email || '',\n    phone: profileData.phone || '',\n    businessName: profileData.business_name || '',\n    businessType: profileData.business_type || '',\n    businessCategory: profileData.business_category || '',\n    town: profileData.business_town || '',\n    postcode: profileData.business_postcode || '',\n    \n    // File URLs - update the specific file that was uploaded\n    logo_url: fileType === 'logo' ? fileUrl : profileData.logo || '',\n    menuservice_url: fileType === 'menu' ? fileUrl : profileData.menu_url || '',\n    offer_image_url: fileType === 'offer' ? fileUrl : profileData.offer_image || '',\n    \n    // Offer data if available\n    offerName: profileData.offer_name || '',\n    offerType: profileData.offer_type || '',\n    offerValue: profileData.offer_value || '',\n    \n    // Additional context\n    updateType: 'file_upload',\n    updatedField: fileType,\n    updatedAt: new Date().toISOString()\n  }\n\n  // Send to GHL using the file update function (won't trigger signup notifications)\n  await sendFileUpdateToGoHighLevel(ghlData)\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 645, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/.next-internal/server/app/dashboard/files/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {updateProfileFile as '70b32590eb9874419c584be24a7eb7c88f2cd19de4'} from 'ACTIONS_MODULE0'\nexport {uploadToCloudinary as '602757d329b55714d71e6711c0b62729f8d08e903b'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 673, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/lib/supabase/server.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { cookies } from 'next/headers'\n\n/**\n * Always create a new client inside each request\n */\nexport async function createClient() {\n  const cookieStore = await cookies()\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll()\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            )\n          } catch {\n            // ignore when running inside a Server Component\n          }\n        },\n      },\n    }\n  )\n}"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;AAKO,eAAe;IACpB,MAAM,cAAc,MAAM,IAAA,yQAAO;IAEjC,OAAO,IAAA,4SAAkB,sUAGvB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,gDAAgD;gBAClD;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 703, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/dashboard-layout.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DashboardLayout = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardLayout() from the server but DashboardLayout is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard/dashboard-layout.tsx <module evaluation>\",\n    \"DashboardLayout\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,uYAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 717, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/dashboard-layout.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DashboardLayout = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardLayout() from the server but DashboardLayout is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard/dashboard-layout.tsx\",\n    \"DashboardLayout\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,kBAAkB,IAAA,uYAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,uDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 731, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 739, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/files-page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const FilesPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call FilesPage() from the server but FilesPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard/files-page.tsx <module evaluation>\",\n    \"FilesPage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,uYAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 753, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/files-page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const FilesPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call FilesPage() from the server but FilesPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard/files-page.tsx\",\n    \"FilesPage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,uYAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 767, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 775, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/app/dashboard/files/page.tsx"],"sourcesContent":["import { redirect } from 'next/navigation'\nimport { createClient } from '@/lib/supabase/server'\nimport { DashboardLayout } from '@/components/dashboard/dashboard-layout'\nimport { FilesPage } from '@/components/dashboard/files-page'\nimport { Profile } from '@/types/profiles'\n\nexport default async function DashboardFilesPage() {\n  const supabase = await createClient()\n\n  const { data, error } = await supabase.auth.getClaims()\n  if (error || !data?.claims) {\n    redirect('/auth/login')\n  }\n\n  const { data: profileData, error: profileError } = await supabase\n    .from('profiles')\n    .select('*')\n    .eq('user_id', data.claims.sub)\n    .single()\n\n  if (profileError || !profileData) {\n    console.error('Error fetching profile:', profileError)\n    redirect('/onboarding')\n  }\n\n  const profile: Profile = profileData\n\n  return (\n    <DashboardLayout currentSection=\"files\" profile={profile}>\n      <FilesPage profile={profile} />\n    </DashboardLayout>\n  )\n}\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAGe,eAAe;IAC5B,MAAM,WAAW,MAAM,IAAA,yIAAY;IAEnC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,SAAS;IACrD,IAAI,SAAS,CAAC,MAAM,QAAQ;QAC1B,IAAA,gUAAQ,EAAC;IACX;IAEA,MAAM,EAAE,MAAM,WAAW,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,SACtD,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,WAAW,KAAK,MAAM,CAAC,GAAG,EAC7B,MAAM;IAET,IAAI,gBAAgB,CAAC,aAAa;QAChC,QAAQ,KAAK,CAAC,2BAA2B;QACzC,IAAA,gUAAQ,EAAC;IACX;IAEA,MAAM,UAAmB;IAEzB,qBACE,6WAAC,kKAAe;QAAC,gBAAe;QAAQ,SAAS;kBAC/C,cAAA,6WAAC,sJAAS;YAAC,SAAS;;;;;;;;;;;AAG1B","debugId":null}}]
}