{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { NextResponse, type NextRequest } from 'next/server'\n\nexport async function middleware(request: NextRequest) {\n  let supabaseResponse = NextResponse.next({ request })\n\n  // ðŸŽ¯ Allow public access to user dashboard for demos\n  if (request.nextUrl.pathname.startsWith('/user')) {\n    return supabaseResponse\n  }\n\n  try {\n    const supabase = createServerClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n      {\n        cookies: {\n          getAll() {\n            return request.cookies.getAll()\n          },\n          setAll(cookiesToSet) {\n            cookiesToSet.forEach(({ name, value }) => request.cookies.set(name, value))\n            supabaseResponse = NextResponse.next({ request })\n            cookiesToSet.forEach(({ name, value, options }) =>\n              supabaseResponse.cookies.set(name, value, options)\n            )\n          },\n        },\n      }\n    )\n\n    const { data } = await supabase.auth.getClaims()\n    const user = data?.claims\n\n    if (\n      !user &&\n      request.nextUrl.pathname !== '/' &&\n      !request.nextUrl.pathname.startsWith('/login') &&\n      !request.nextUrl.pathname.startsWith('/auth') &&\n      !request.nextUrl.pathname.startsWith('/onboarding')\n    ) {\n      const url = request.nextUrl.clone()\n      url.pathname = '/auth/login'\n      return NextResponse.redirect(url)\n    }\n  } catch (error) {\n    // If Supabase fails in Edge Runtime, fall back to allowing the request\n    console.warn('Middleware auth check failed:', error)\n  }\n\n  return supabaseResponse\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - images - .svg, .png, .jpg, .jpeg, .gif, .webp\n     * Feel free to modify this pattern to include more paths.\n     */\n    '/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',\n],\n}\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AAAA;;;AAEO,eAAe,WAAW,OAAoB;IACnD,IAAI,mBAAmB,+TAAY,CAAC,IAAI,CAAC;QAAE;IAAQ;IAEnD,qDAAqD;IACrD,IAAI,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU;QAChD,OAAO;IACT;IAEA,IAAI;QACF,MAAM,WAAW,IAAA,oTAAkB,sUAGjC;YACE,SAAS;gBACP;oBACE,OAAO,QAAQ,OAAO,CAAC,MAAM;gBAC/B;gBACA,QAAO,YAAY;oBACjB,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAK,QAAQ,OAAO,CAAC,GAAG,CAAC,MAAM;oBACpE,mBAAmB,+TAAY,CAAC,IAAI,CAAC;wBAAE;oBAAQ;oBAC/C,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,iBAAiB,OAAO,CAAC,GAAG,CAAC,MAAM,OAAO;gBAE9C;YACF;QACF;QAGF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,SAAS;QAC9C,MAAM,OAAO,MAAM;QAEnB,IACE,CAAC,QACD,QAAQ,OAAO,CAAC,QAAQ,KAAK,OAC7B,CAAC,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,aACrC,CAAC,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,YACrC,CAAC,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,gBACrC;YACA,MAAM,MAAM,QAAQ,OAAO,CAAC,KAAK;YACjC,IAAI,QAAQ,GAAG;YACf,OAAO,+TAAY,CAAC,QAAQ,CAAC;QAC/B;IACF,EAAE,OAAO,OAAO;QACd,uEAAuE;QACvE,QAAQ,IAAI,CAAC,iCAAiC;IAChD;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;;KAOC,GACD;KACH;AACD"}}]
}