{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/intent/[code]",
      "regex": "^/intent/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPcode": "nxtPcode"
      },
      "namedRegex": "^/intent/(?<nxtPcode>[^/]+?)(?:/)?$"
    },
    {
      "page": "/intent/[...params]",
      "regex": "^/intent/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPparams": "nxtPparams"
      },
      "namedRegex": "^/intent/(?<nxtPparams>.+?)(?:/)?$"
    },
    {
      "page": "/user/business/[slug]",
      "regex": "^/user/business/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/user/business/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/wallet-pass/[id]",
      "regex": "^/wallet\\-pass/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/wallet\\-pass/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/ai-test",
      "regex": "^/admin/ai\\-test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/ai\\-test(?:/)?$"
    },
    {
      "page": "/admin/debug",
      "regex": "^/admin/debug(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/debug(?:/)?$"
    },
    {
      "page": "/admin/franchise-setup",
      "regex": "^/admin/franchise\\-setup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/franchise\\-setup(?:/)?$"
    },
    {
      "page": "/admin/login",
      "regex": "^/admin/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/login(?:/)?$"
    },
    {
      "page": "/admin/monitoring",
      "regex": "^/admin/monitoring(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/monitoring(?:/)?$"
    },
    {
      "page": "/admin/utils/cleanup-auth",
      "regex": "^/admin/utils/cleanup\\-auth(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/utils/cleanup\\-auth(?:/)?$"
    },
    {
      "page": "/admin/utils/create-test-profile",
      "regex": "^/admin/utils/create\\-test\\-profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/utils/create\\-test\\-profile(?:/)?$"
    },
    {
      "page": "/admin/utils/debug-users",
      "regex": "^/admin/utils/debug\\-users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/utils/debug\\-users(?:/)?$"
    },
    {
      "page": "/admin/utils/delete-orphaned-users",
      "regex": "^/admin/utils/delete\\-orphaned\\-users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/utils/delete\\-orphaned\\-users(?:/)?$"
    },
    {
      "page": "/admin/utils/init-mock-user",
      "regex": "^/admin/utils/init\\-mock\\-user(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/utils/init\\-mock\\-user(?:/)?$"
    },
    {
      "page": "/admin/utils/reset-david",
      "regex": "^/admin/utils/reset\\-david(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/utils/reset\\-david(?:/)?$"
    },
    {
      "page": "/admin/wallet-pass-update",
      "regex": "^/admin/wallet\\-pass\\-update(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/wallet\\-pass\\-update(?:/)?$"
    },
    {
      "page": "/auth/confirm",
      "regex": "^/auth/confirm(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/confirm(?:/)?$"
    },
    {
      "page": "/auth/error",
      "regex": "^/auth/error(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/error(?:/)?$"
    },
    {
      "page": "/auth/forgot-password",
      "regex": "^/auth/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/forgot\\-password(?:/)?$"
    },
    {
      "page": "/auth/login",
      "regex": "^/auth/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/login(?:/)?$"
    },
    {
      "page": "/auth/logout",
      "regex": "^/auth/logout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/logout(?:/)?$"
    },
    {
      "page": "/auth/sign-up",
      "regex": "^/auth/sign\\-up(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/sign\\-up(?:/)?$"
    },
    {
      "page": "/auth/sign-up-success",
      "regex": "^/auth/sign\\-up\\-success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/sign\\-up\\-success(?:/)?$"
    },
    {
      "page": "/auth/update-password",
      "regex": "^/auth/update\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/update\\-password(?:/)?$"
    },
    {
      "page": "/business",
      "regex": "^/business(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/business(?:/)?$"
    },
    {
      "page": "/business/dashboard",
      "regex": "^/business/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/business/dashboard(?:/)?$"
    },
    {
      "page": "/coming-soon",
      "regex": "^/coming\\-soon(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/coming\\-soon(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/dashboard/action-items",
      "regex": "^/dashboard/action\\-items(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/action\\-items(?:/)?$"
    },
    {
      "page": "/dashboard/analytics",
      "regex": "^/dashboard/analytics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/analytics(?:/)?$"
    },
    {
      "page": "/dashboard/business",
      "regex": "^/dashboard/business(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/business(?:/)?$"
    },
    {
      "page": "/dashboard/files",
      "regex": "^/dashboard/files(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/files(?:/)?$"
    },
    {
      "page": "/dashboard/loyalty",
      "regex": "^/dashboard/loyalty(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/loyalty(?:/)?$"
    },
    {
      "page": "/dashboard/notifications",
      "regex": "^/dashboard/notifications(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/notifications(?:/)?$"
    },
    {
      "page": "/dashboard/offers",
      "regex": "^/dashboard/offers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/offers(?:/)?$"
    },
    {
      "page": "/dashboard/personal",
      "regex": "^/dashboard/personal(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/personal(?:/)?$"
    },
    {
      "page": "/dashboard/referrals",
      "regex": "^/dashboard/referrals(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/referrals(?:/)?$"
    },
    {
      "page": "/dashboard/secret-menu",
      "regex": "^/dashboard/secret\\-menu(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/secret\\-menu(?:/)?$"
    },
    {
      "page": "/dashboard/settings",
      "regex": "^/dashboard/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/settings(?:/)?$"
    },
    {
      "page": "/dashboard/support",
      "regex": "^/dashboard/support(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/support(?:/)?$"
    },
    {
      "page": "/debug-supabase",
      "regex": "^/debug\\-supabase(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug\\-supabase(?:/)?$"
    },
    {
      "page": "/embed/chat",
      "regex": "^/embed/chat(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/embed/chat(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/intent",
      "regex": "^/intent(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/intent(?:/)?$"
    },
    {
      "page": "/offline",
      "regex": "^/offline(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/offline(?:/)?$"
    },
    {
      "page": "/onboarding",
      "regex": "^/onboarding(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/onboarding(?:/)?$"
    },
    {
      "page": "/onboarding/success",
      "regex": "^/onboarding/success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/onboarding/success(?:/)?$"
    },
    {
      "page": "/phase2-gate",
      "regex": "^/phase2\\-gate(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/phase2\\-gate(?:/)?$"
    },
    {
      "page": "/protected",
      "regex": "^/protected(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/protected(?:/)?$"
    },
    {
      "page": "/simulate-wallet-pass",
      "regex": "^/simulate\\-wallet\\-pass(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/simulate\\-wallet\\-pass(?:/)?$"
    },
    {
      "page": "/test-ai",
      "regex": "^/test\\-ai(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-ai(?:/)?$"
    },
    {
      "page": "/test-qr-scroll",
      "regex": "^/test\\-qr\\-scroll(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-qr\\-scroll(?:/)?$"
    },
    {
      "page": "/user",
      "regex": "^/user(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user(?:/)?$"
    },
    {
      "page": "/user/chat",
      "regex": "^/user/chat(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/chat(?:/)?$"
    },
    {
      "page": "/user/credits",
      "regex": "^/user/credits(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/credits(?:/)?$"
    },
    {
      "page": "/user/dashboard",
      "regex": "^/user/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/dashboard(?:/)?$"
    },
    {
      "page": "/user/discover",
      "regex": "^/user/discover(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/discover(?:/)?$"
    },
    {
      "page": "/user/how-it-works",
      "regex": "^/user/how\\-it\\-works(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/how\\-it\\-works(?:/)?$"
    },
    {
      "page": "/user/offers",
      "regex": "^/user/offers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/offers(?:/)?$"
    },
    {
      "page": "/user/secret-menu",
      "regex": "^/user/secret\\-menu(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/secret\\-menu(?:/)?$"
    },
    {
      "page": "/user/settings",
      "regex": "^/user/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/settings(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}