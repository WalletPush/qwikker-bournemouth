{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/lib/supabase/client.ts"],"sourcesContent":["import { createBrowserClient } from '@supabase/ssr'\n\nexport function createClient() {\n  return createBrowserClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!   // âœ… correct variable name\n  )\n}\n"],"names":[],"mappings":";;;;AAII;AAJJ;AAAA;;AAEO,SAAS;IACd,OAAO,IAAA,iTAAmB;AAI5B","debugId":null}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,uOAAO,EAAC,IAAA,iMAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,qPAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,KASb;QATa,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF,GATa;IAUd,MAAM,OAAO,UAAU,gTAAI,GAAG;IAE9B,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/logout-button.tsx"],"sourcesContent":["'use client'\n\nimport { createClient } from '@/lib/supabase/client'\nimport { Button } from '@/components/ui/button'\nimport { useRouter } from 'next/navigation'\n\nexport function LogoutButton() {\n  const router = useRouter()\n\n  const logout = async () => {\n    const supabase = createClient()\n    await supabase.auth.signOut()\n    router.push('/auth/login')\n  }\n\n  return <Button onClick={logout}>Logout</Button>\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAMO,SAAS;;IACd,MAAM,SAAS,IAAA,iRAAS;IAExB,MAAM,SAAS;QACb,MAAM,WAAW,IAAA,4IAAY;QAC7B,MAAM,SAAS,IAAI,CAAC,OAAO;QAC3B,OAAO,IAAI,CAAC;IACd;IAEA,qBAAO,4TAAC,wIAAM;QAAC,SAAS;kBAAQ;;;;;;AAClC;GAVgB;;QACC,iRAAS;;;KADV","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/dashboard-layout.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/navigation'\nimport { LogoutButton } from '@/components/logout-button'\n\ninterface DashboardLayoutProps {\n  children: React.ReactNode\n  currentSection: string\n  profile?: any\n}\n\ninterface NavItem {\n  id: string\n  title: string\n  icon: React.ReactNode\n  href: string\n  locked?: boolean\n}\n\nconst navItems: NavItem[] = [\n  { \n    id: 'dashboard', \n    title: 'Dashboard', \n    icon: <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" /></svg>, \n    href: '/dashboard' \n  },\n  { \n    id: 'personal-info', \n    title: 'Personal Info', \n    icon: <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" /></svg>, \n    href: '/dashboard/personal' \n  },\n  { \n    id: 'business-info', \n    title: 'Business Info', \n    icon: <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" /></svg>, \n    href: '/dashboard/business' \n  },\n  { \n    id: 'offers', \n    title: 'Offers', \n    icon: <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\" /></svg>, \n    href: '/dashboard/offers' \n  },\n  { \n    id: 'secret-menu', \n    title: 'Secret Menu', \n    icon: <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" /></svg>, \n    href: '/dashboard/secret-menu' \n  },\n  { \n    id: 'action-items', \n    title: 'Action Items', \n    icon: <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4\" /></svg>, \n    href: '/dashboard/action-items' \n  },\n  { \n    id: 'loyalty', \n    title: 'Loyalty Cards', \n    icon: <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\" /></svg>, \n    href: '/dashboard/loyalty', \n    locked: true \n  },\n  { \n    id: 'analytics', \n    title: 'Analytics', \n    icon: <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" /></svg>, \n    href: '/dashboard/analytics', \n    locked: true \n  },\n  { \n    id: 'notifications', \n    title: 'Push Notifications', \n    icon: <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-5 5v-5zM4 12a8 8 0 1116 0c0 3-2 5-2 5H6s-2-2-2-5zM9 21h6\" /></svg>, \n    href: '/dashboard/notifications', \n    locked: true \n  },\n  { \n    id: 'referrals', \n    title: 'Referrals', \n    icon: <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" /></svg>, \n    href: '/dashboard/referrals' \n  },\n  { \n    id: 'files', \n    title: 'Files', \n    icon: <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\" /></svg>, \n    href: '/dashboard/files' \n  },\n  { \n    id: 'settings', \n    title: 'Settings', \n    icon: <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" /><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" /></svg>, \n    href: '/dashboard/settings' \n  },\n  { \n    id: 'support', \n    title: 'Support', \n    icon: <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192L5.636 18.364M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-5 0a4 4 0 11-8 0 4 4 0 018 0z\" /></svg>, \n    href: '/dashboard/support' \n  },\n]\n\nexport function DashboardLayout({ children, currentSection, profile }: DashboardLayoutProps) {\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const router = useRouter()\n\n  const businessName = profile?.business_name || 'Your Business'\n  const businessInitials = businessName.split(' ').map((word: string) => word[0]).join('').toUpperCase().slice(0, 2)\n\n  const handleLockedFeature = () => {\n    // Show upgrade modal or redirect to settings\n    router.push('/dashboard/settings')\n  }\n\n  return (\n    <div className=\"min-h-screen bg-slate-950 text-white\">\n      {/* Mobile sidebar overlay */}\n      {sidebarOpen && (\n        <div \n          className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-40 lg:hidden\"\n          onClick={() => setSidebarOpen(false)}\n        />\n      )}\n\n      {/* Sidebar */}\n      <div className={`sidebar-locked inset-y-0 left-0 w-80 bg-slate-900/95 backdrop-blur-xl border-r border-slate-800 transform transition-transform duration-300 z-50 flex flex-col ${\n        sidebarOpen ? 'translate-x-0' : '-translate-x-full'\n      } lg:translate-x-0`}>\n        \n          {/* Logo - Fixed at top */}\n          <div className=\"flex-shrink-0 p-6 border-b border-slate-800\">\n            <div className=\"text-center space-y-2\">\n              {/* QWIKKER Logo */}\n              <img \n                src=\"/Qwikker Logo web.svg\" \n                alt=\"QWIKKER Business Dashboard\" \n                className=\"h-8 w-auto sm:h-10 mx-auto\"\n              />\n              {/* Business Dashboard Text */}\n              <p className=\"text-sm text-gray-400 font-medium\">Business Dashboard</p>\n            </div>\n          </div>\n\n        {/* Navigation - Scrollable */}\n        <nav className=\"flex-1 overflow-y-scroll overflow-x-hidden scrollbar-hidden p-4 space-y-2\"\n        style={{ \n          touchAction: 'pan-y',\n          overscrollBehavior: 'contain'\n        }}>\n          {navItems.map((item) => (\n            <div key={item.id}>\n              {item.locked ? (\n                <Link\n                  href={item.href}\n                  className={`w-full flex items-center gap-3 px-4 py-3 rounded-lg transition-colors relative group ${\n                    currentSection === item.id \n                      ? 'bg-[#00d083]/10 text-[#00d083] border-r-2 border-[#00d083]' \n                      : 'text-gray-400 hover:bg-slate-800/50'\n                  }`}\n                >\n                  <div className={currentSection === item.id ? 'text-[#00d083]' : 'text-gray-400'}>{item.icon}</div>\n                  <span className=\"flex-1 text-left\">{item.title}</span>\n                  <div className=\"w-4 h-4 bg-slate-700 rounded-full flex items-center justify-center\">\n                    <svg className=\"w-2.5 h-2.5 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 616 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <div className=\"absolute left-full ml-2 px-2 py-1 bg-slate-800 text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\n                    Premium Feature\n                  </div>\n                </Link>\n              ) : (\n                <Link\n                  href={item.href}\n                  className={`flex items-center gap-3 px-4 py-3 rounded-lg transition-colors ${\n                    currentSection === item.id\n                      ? 'bg-gradient-to-r from-[#00d083]/20 to-[#00b86f]/20 border border-[#00d083]/30 text-[#00d083]'\n                      : 'text-gray-300 hover:bg-slate-800/50 hover:text-white'\n                  }`}\n                >\n                  <div className={currentSection === item.id ? \"text-[#00d083]\" : \"text-gray-400\"}>{item.icon}</div>\n                  <span>{item.title}</span>\n                </Link>\n              )}\n            </div>\n          ))}\n        </nav>\n      </div>\n\n      {/* Main content */}\n      <div className=\"lg:ml-80\">\n        {/* Top header */}\n        <header className=\"bg-slate-900/95 backdrop-blur-xl border-b border-slate-800 px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            {/* Left side - Mobile menu button */}\n            <div className=\"flex items-center\">\n              <button\n                onClick={() => setSidebarOpen(true)}\n                className=\"lg:hidden p-2 rounded-lg bg-slate-800 hover:bg-slate-700 transition-colors\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                </svg>\n              </button>\n              {/* Page title or breadcrumb can go here */}\n              <div className=\"hidden lg:block\">\n                <h1 className=\"text-lg font-semibold text-white\">Dashboard</h1>\n              </div>\n            </div>\n\n            {/* Right side - User info with better spacing */}\n            <div className=\"flex items-center gap-4\">\n              {/* Business name and title */}\n              <div className=\"text-right\">\n                <p className=\"font-semibold text-white\">{businessName}</p>\n                <p className=\"text-sm text-gray-400\">Business Owner</p>\n              </div>\n              \n              {/* Avatar - Perfect circle */}\n              <div className=\"w-10 h-10 bg-gradient-to-br from-[#00d083] to-[#00b86f] rounded-full flex items-center justify-center font-semibold text-black\">\n                {businessInitials}\n              </div>\n              \n              {/* Logout button */}\n              <LogoutButton />\n            </div>\n          </div>\n        </header>\n\n        {/* Page content */}\n        <main className=\"p-6\">\n          {children}\n        </main>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 829, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACZ,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACjB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACvB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACnB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 956, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,KAA4D;QAA5D,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC,GAA5D;IACb,qBACE,4TAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 988, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,KAGoC;QAHpC,EACb,SAAS,EACT,GAAG,OAC8C,GAHpC;IAIb,qBACE,4TAAC,gYAAmB;QAClB,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 1022, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/lib/actions/business-actions.ts"],"sourcesContent":["'use server'\n\nimport { createAdminClient } from '@/lib/supabase/admin'\nimport { sendBusinessUpdateNotification } from '@/lib/integrations'\nimport { revalidatePath } from 'next/cache'\n\n/**\n * Add a secret menu item and notify Slack\n */\nexport async function addSecretMenuItem(userId: string, itemData: {\n  itemName: string\n  description?: string\n  price?: string\n}) {\n  const supabaseAdmin = createAdminClient()\n\n  // Get user profile for notification context\n  const { data: profile, error: profileError } = await supabaseAdmin\n    .from('profiles')\n    .select('*')\n    .eq('user_id', userId)\n    .single()\n\n  if (profileError || !profile) {\n    return { success: false, error: 'Profile not found' }\n  }\n\n  // For now, store secret menu items in additional_notes or create a separate table\n  // This is a placeholder - you might want a dedicated secret_menu_items table\n  const secretMenuData = {\n    ...itemData,\n    created_at: new Date().toISOString()\n  }\n\n  // Update profile with secret menu item (stored as JSON in additional_notes for now)\n  const currentNotes = profile.additional_notes || '{}'\n  let notesData\n  try {\n    notesData = JSON.parse(currentNotes)\n  } catch {\n    notesData = {}\n  }\n\n  if (!notesData.secret_menu_items) {\n    notesData.secret_menu_items = []\n  }\n  notesData.secret_menu_items.push(secretMenuData)\n\n  const { error: updateError } = await supabaseAdmin\n    .from('profiles')\n    .update({ additional_notes: JSON.stringify(notesData) })\n    .eq('user_id', userId)\n\n  if (updateError) {\n    return { success: false, error: updateError.message }\n  }\n\n  // Send Slack notification\n  try {\n    await sendBusinessUpdateNotification(profile, 'secret_menu', itemData)\n  } catch (error) {\n    console.error('Slack notification failed (non-critical):', error)\n  }\n\n  revalidatePath('/dashboard')\n  return { success: true, data: secretMenuData }\n}\n\n/**\n * Create a new offer and notify Slack\n */\nexport async function createOffer(userId: string, offerData: {\n  offerName: string\n  offerType: string\n  offerValue: string\n  offerClaimAmount?: string\n  offerTerms?: string\n  startDate?: string\n  endDate?: string\n  offerImage?: string | null\n}) {\n  const supabaseAdmin = createAdminClient()\n\n  // Update profile with offer data\n  const { data: profile, error } = await supabaseAdmin\n    .from('profiles')\n    .update({\n      offer_name: offerData.offerName,\n      offer_type: offerData.offerType,\n      offer_value: offerData.offerValue,\n      offer_claim_amount: offerData.offerClaimAmount,\n      offer_terms: offerData.offerTerms,\n      offer_start_date: offerData.startDate,\n      offer_end_date: offerData.endDate,\n      offer_image: offerData.offerImage\n    })\n    .eq('user_id', userId)\n    .select()\n    .single()\n\n  if (error) {\n    return { success: false, error: error.message }\n  }\n\n  // Send Slack notification with all offer details\n  try {\n    await sendBusinessUpdateNotification(profile, 'offer_created', {\n      offerName: offerData.offerName,\n      offerType: offerData.offerType,\n      offerValue: offerData.offerValue,\n      offerClaimAmount: offerData.offerClaimAmount,\n      offerStartDate: offerData.startDate,\n      offerEndDate: offerData.endDate,\n      offerTerms: offerData.offerTerms,\n      offerImage: offerData.offerImage\n    })\n  } catch (error) {\n    console.error('Slack notification failed (non-critical):', error)\n  }\n\n  revalidatePath('/dashboard')\n  return { success: true, data: profile }\n}\n\n/**\n * Update important business information and notify Slack\n */\nexport async function updateBusinessInfo(userId: string, updates: any) {\n  const supabaseAdmin = createAdminClient()\n\n  // Filter out routine contact updates that don't need notifications\n  const routineFields = ['phone', 'email', 'first_name', 'last_name']\n  const importantUpdates = Object.keys(updates).filter(key => !routineFields.includes(key))\n\n  const { data: profile, error } = await supabaseAdmin\n    .from('profiles')\n    .update(updates)\n    .eq('user_id', userId)\n    .select()\n    .single()\n\n  if (error) {\n    return { success: false, error: error.message }\n  }\n\n  // Only send notification if important fields were updated\n  if (importantUpdates.length > 0) {\n    try {\n      await sendBusinessUpdateNotification(profile, 'business_info', { \n        updatedFields: importantUpdates \n      })\n    } catch (error) {\n      console.error('Slack notification failed (non-critical):', error)\n    }\n  }\n\n  revalidatePath('/dashboard')\n  return { success: true, data: profile }\n}\n\n/**\n * Delete an offer and notify Slack\n */\nexport async function deleteOffer(userId: string) {\n  const supabaseAdmin = createAdminClient()\n\n  // Get the current offer details for the notification\n  const { data: currentProfile, error: fetchError } = await supabaseAdmin\n    .from('profiles')\n    .select('*')\n    .eq('user_id', userId)\n    .single()\n\n  if (fetchError || !currentProfile) {\n    return { success: false, error: 'Profile not found' }\n  }\n\n  // Store offer details before deletion for notification\n  const deletedOffer = {\n    offerName: currentProfile.offer_name,\n    offerType: currentProfile.offer_type,\n    offerValue: currentProfile.offer_value,\n  }\n\n  // Clear offer data from profile\n  const { data: profile, error } = await supabaseAdmin\n    .from('profiles')\n    .update({\n      offer_name: null,\n      offer_type: null,\n      offer_value: null,\n      offer_claim_amount: null,\n      offer_terms: null,\n      offer_start_date: null,\n      offer_end_date: null,\n      offer_image: null\n    })\n    .eq('user_id', userId)\n    .select()\n    .single()\n\n  if (error) {\n    return { success: false, error: error.message }\n  }\n\n  // Send Slack notification about deletion\n  try {\n    await sendBusinessUpdateNotification(profile, 'offer_deleted', deletedOffer)\n  } catch (error) {\n    console.error('Slack notification failed (non-critical):', error)\n  }\n\n  revalidatePath('/dashboard')\n  revalidatePath('/dashboard/offers')\n  return { success: true, data: profile }\n}\n\n/**\n * Delete a secret menu item and notify Slack\n */\nexport async function deleteSecretMenuItem(userId: string, itemId: string) {\n  const supabaseAdmin = createAdminClient()\n\n  // Get current profile data\n  const { data: profile, error: profileError } = await supabaseAdmin\n    .from('profiles')\n    .select('*')\n    .eq('user_id', userId)\n    .single()\n\n  if (profileError || !profile) {\n    return { success: false, error: 'Profile not found' }\n  }\n\n  // Parse current secret menu items\n  const currentNotes = profile.additional_notes || '{}'\n  let notesData\n  try {\n    notesData = JSON.parse(currentNotes)\n  } catch {\n    notesData = {}\n  }\n\n  if (!notesData.secret_menu_items || !Array.isArray(notesData.secret_menu_items)) {\n    return { success: false, error: 'No secret menu items found' }\n  }\n\n  // Find the item to delete\n  const itemIndex = notesData.secret_menu_items.findIndex((item: any) => \n    item.created_at === itemId || item.itemName === itemId\n  )\n\n  if (itemIndex === -1) {\n    return { success: false, error: 'Secret menu item not found' }\n  }\n\n  // Store deleted item details for notification\n  const deletedItem = notesData.secret_menu_items[itemIndex]\n\n  // Remove the item\n  notesData.secret_menu_items.splice(itemIndex, 1)\n\n  // Update profile with modified secret menu items\n  const { error: updateError } = await supabaseAdmin\n    .from('profiles')\n    .update({ additional_notes: JSON.stringify(notesData) })\n    .eq('user_id', userId)\n\n  if (updateError) {\n    return { success: false, error: updateError.message }\n  }\n\n  // Send Slack notification about deletion\n  try {\n    await sendBusinessUpdateNotification(profile, 'secret_menu_deleted', deletedItem)\n  } catch (error) {\n    console.error('Slack notification failed (non-critical):', error)\n  }\n\n  revalidatePath('/dashboard')\n  revalidatePath('/dashboard/secret-menu')\n  return { success: true, data: deletedItem }\n}\n"],"names":[],"mappings":";;;;;;;IASsB,oBAAA,WAAA,GAAA,IAAA,iXAAA,EAAA,8CAAA,sWAAA,EAAA,KAAA,GAAA,4WAAA,EAAA","debugId":null}},
    {"offset": {"line": 1037, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/lib/actions/business-actions.ts"],"sourcesContent":["'use server'\n\nimport { createAdminClient } from '@/lib/supabase/admin'\nimport { sendBusinessUpdateNotification } from '@/lib/integrations'\nimport { revalidatePath } from 'next/cache'\n\n/**\n * Add a secret menu item and notify Slack\n */\nexport async function addSecretMenuItem(userId: string, itemData: {\n  itemName: string\n  description?: string\n  price?: string\n}) {\n  const supabaseAdmin = createAdminClient()\n\n  // Get user profile for notification context\n  const { data: profile, error: profileError } = await supabaseAdmin\n    .from('profiles')\n    .select('*')\n    .eq('user_id', userId)\n    .single()\n\n  if (profileError || !profile) {\n    return { success: false, error: 'Profile not found' }\n  }\n\n  // For now, store secret menu items in additional_notes or create a separate table\n  // This is a placeholder - you might want a dedicated secret_menu_items table\n  const secretMenuData = {\n    ...itemData,\n    created_at: new Date().toISOString()\n  }\n\n  // Update profile with secret menu item (stored as JSON in additional_notes for now)\n  const currentNotes = profile.additional_notes || '{}'\n  let notesData\n  try {\n    notesData = JSON.parse(currentNotes)\n  } catch {\n    notesData = {}\n  }\n\n  if (!notesData.secret_menu_items) {\n    notesData.secret_menu_items = []\n  }\n  notesData.secret_menu_items.push(secretMenuData)\n\n  const { error: updateError } = await supabaseAdmin\n    .from('profiles')\n    .update({ additional_notes: JSON.stringify(notesData) })\n    .eq('user_id', userId)\n\n  if (updateError) {\n    return { success: false, error: updateError.message }\n  }\n\n  // Send Slack notification\n  try {\n    await sendBusinessUpdateNotification(profile, 'secret_menu', itemData)\n  } catch (error) {\n    console.error('Slack notification failed (non-critical):', error)\n  }\n\n  revalidatePath('/dashboard')\n  return { success: true, data: secretMenuData }\n}\n\n/**\n * Create a new offer and notify Slack\n */\nexport async function createOffer(userId: string, offerData: {\n  offerName: string\n  offerType: string\n  offerValue: string\n  offerClaimAmount?: string\n  offerTerms?: string\n  startDate?: string\n  endDate?: string\n  offerImage?: string | null\n}) {\n  const supabaseAdmin = createAdminClient()\n\n  // Update profile with offer data\n  const { data: profile, error } = await supabaseAdmin\n    .from('profiles')\n    .update({\n      offer_name: offerData.offerName,\n      offer_type: offerData.offerType,\n      offer_value: offerData.offerValue,\n      offer_claim_amount: offerData.offerClaimAmount,\n      offer_terms: offerData.offerTerms,\n      offer_start_date: offerData.startDate,\n      offer_end_date: offerData.endDate,\n      offer_image: offerData.offerImage\n    })\n    .eq('user_id', userId)\n    .select()\n    .single()\n\n  if (error) {\n    return { success: false, error: error.message }\n  }\n\n  // Send Slack notification with all offer details\n  try {\n    await sendBusinessUpdateNotification(profile, 'offer_created', {\n      offerName: offerData.offerName,\n      offerType: offerData.offerType,\n      offerValue: offerData.offerValue,\n      offerClaimAmount: offerData.offerClaimAmount,\n      offerStartDate: offerData.startDate,\n      offerEndDate: offerData.endDate,\n      offerTerms: offerData.offerTerms,\n      offerImage: offerData.offerImage\n    })\n  } catch (error) {\n    console.error('Slack notification failed (non-critical):', error)\n  }\n\n  revalidatePath('/dashboard')\n  return { success: true, data: profile }\n}\n\n/**\n * Update important business information and notify Slack\n */\nexport async function updateBusinessInfo(userId: string, updates: any) {\n  const supabaseAdmin = createAdminClient()\n\n  // Filter out routine contact updates that don't need notifications\n  const routineFields = ['phone', 'email', 'first_name', 'last_name']\n  const importantUpdates = Object.keys(updates).filter(key => !routineFields.includes(key))\n\n  const { data: profile, error } = await supabaseAdmin\n    .from('profiles')\n    .update(updates)\n    .eq('user_id', userId)\n    .select()\n    .single()\n\n  if (error) {\n    return { success: false, error: error.message }\n  }\n\n  // Only send notification if important fields were updated\n  if (importantUpdates.length > 0) {\n    try {\n      await sendBusinessUpdateNotification(profile, 'business_info', { \n        updatedFields: importantUpdates \n      })\n    } catch (error) {\n      console.error('Slack notification failed (non-critical):', error)\n    }\n  }\n\n  revalidatePath('/dashboard')\n  return { success: true, data: profile }\n}\n\n/**\n * Delete an offer and notify Slack\n */\nexport async function deleteOffer(userId: string) {\n  const supabaseAdmin = createAdminClient()\n\n  // Get the current offer details for the notification\n  const { data: currentProfile, error: fetchError } = await supabaseAdmin\n    .from('profiles')\n    .select('*')\n    .eq('user_id', userId)\n    .single()\n\n  if (fetchError || !currentProfile) {\n    return { success: false, error: 'Profile not found' }\n  }\n\n  // Store offer details before deletion for notification\n  const deletedOffer = {\n    offerName: currentProfile.offer_name,\n    offerType: currentProfile.offer_type,\n    offerValue: currentProfile.offer_value,\n  }\n\n  // Clear offer data from profile\n  const { data: profile, error } = await supabaseAdmin\n    .from('profiles')\n    .update({\n      offer_name: null,\n      offer_type: null,\n      offer_value: null,\n      offer_claim_amount: null,\n      offer_terms: null,\n      offer_start_date: null,\n      offer_end_date: null,\n      offer_image: null\n    })\n    .eq('user_id', userId)\n    .select()\n    .single()\n\n  if (error) {\n    return { success: false, error: error.message }\n  }\n\n  // Send Slack notification about deletion\n  try {\n    await sendBusinessUpdateNotification(profile, 'offer_deleted', deletedOffer)\n  } catch (error) {\n    console.error('Slack notification failed (non-critical):', error)\n  }\n\n  revalidatePath('/dashboard')\n  revalidatePath('/dashboard/offers')\n  return { success: true, data: profile }\n}\n\n/**\n * Delete a secret menu item and notify Slack\n */\nexport async function deleteSecretMenuItem(userId: string, itemId: string) {\n  const supabaseAdmin = createAdminClient()\n\n  // Get current profile data\n  const { data: profile, error: profileError } = await supabaseAdmin\n    .from('profiles')\n    .select('*')\n    .eq('user_id', userId)\n    .single()\n\n  if (profileError || !profile) {\n    return { success: false, error: 'Profile not found' }\n  }\n\n  // Parse current secret menu items\n  const currentNotes = profile.additional_notes || '{}'\n  let notesData\n  try {\n    notesData = JSON.parse(currentNotes)\n  } catch {\n    notesData = {}\n  }\n\n  if (!notesData.secret_menu_items || !Array.isArray(notesData.secret_menu_items)) {\n    return { success: false, error: 'No secret menu items found' }\n  }\n\n  // Find the item to delete\n  const itemIndex = notesData.secret_menu_items.findIndex((item: any) => \n    item.created_at === itemId || item.itemName === itemId\n  )\n\n  if (itemIndex === -1) {\n    return { success: false, error: 'Secret menu item not found' }\n  }\n\n  // Store deleted item details for notification\n  const deletedItem = notesData.secret_menu_items[itemIndex]\n\n  // Remove the item\n  notesData.secret_menu_items.splice(itemIndex, 1)\n\n  // Update profile with modified secret menu items\n  const { error: updateError } = await supabaseAdmin\n    .from('profiles')\n    .update({ additional_notes: JSON.stringify(notesData) })\n    .eq('user_id', userId)\n\n  if (updateError) {\n    return { success: false, error: updateError.message }\n  }\n\n  // Send Slack notification about deletion\n  try {\n    await sendBusinessUpdateNotification(profile, 'secret_menu_deleted', deletedItem)\n  } catch (error) {\n    console.error('Slack notification failed (non-critical):', error)\n  }\n\n  revalidatePath('/dashboard')\n  revalidatePath('/dashboard/secret-menu')\n  return { success: true, data: deletedItem }\n}\n"],"names":[],"mappings":";;;;;;;IA4NsB,uBAAA,WAAA,GAAA,IAAA,iXAAA,EAAA,8CAAA,sWAAA,EAAA,KAAA,GAAA,4WAAA,EAAA","debugId":null}},
    {"offset": {"line": 1052, "column": 0}, "map": {"version":3,"sources":["file:///Users/qwikker/qwikkerdashboard/components/dashboard/secret-menu-page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { addSecretMenuItem, deleteSecretMenuItem } from '@/lib/actions/business-actions'\nimport { Profile } from '@/types/profiles'\n\ninterface SecretMenuItem {\n  id: string\n  itemName: string\n  description?: string\n  price?: string\n  created_at: string\n}\n\ninterface SecretMenuPageProps {\n  profile: Profile\n}\n\nexport function SecretMenuPage({ profile }: SecretMenuPageProps) {\n  const router = useRouter()\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState<{ type: 'success' | 'error', text: string } | null>(null)\n  const [showCreateForm, setShowCreateForm] = useState(false)\n  const [secretMenuItems, setSecretMenuItems] = useState<SecretMenuItem[]>([])\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState<string | null>(null)\n  const [isDeleting, setIsDeleting] = useState(false)\n\n  const [formData, setFormData] = useState({\n    itemName: '',\n    description: '',\n    price: '',\n  })\n\n  // Load existing secret menu items from additional_notes\n  useEffect(() => {\n    if (profile.additional_notes) {\n      try {\n        const notesData = JSON.parse(profile.additional_notes)\n        if (notesData.secret_menu_items && Array.isArray(notesData.secret_menu_items)) {\n          setSecretMenuItems(notesData.secret_menu_items)\n        }\n      } catch (error) {\n        console.error('Error parsing secret menu items:', error)\n      }\n    }\n  }, [profile.additional_notes])\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }))\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n    setMessage(null)\n\n    try {\n      const result = await addSecretMenuItem(profile.user_id, formData)\n      \n      if (result.success) {\n        setMessage({\n          type: 'success',\n          text: 'Secret menu item added successfully!'\n        })\n        setShowCreateForm(false)\n        setFormData({\n          itemName: '',\n          description: '',\n          price: '',\n        })\n        \n        // Add the new item to local state\n        if (result.data) {\n          setSecretMenuItems(prev => [...prev, {\n            id: Date.now().toString(),\n            itemName: result.data.itemName,\n            description: result.data.description,\n            price: result.data.price,\n            created_at: result.data.created_at\n          }])\n        }\n        \n        router.refresh()\n      } else {\n        throw new Error(result.error || 'Failed to add secret menu item')\n      }\n    } catch (error) {\n      console.error('Secret menu item creation error:', error)\n      setMessage({\n        type: 'error',\n        text: error instanceof Error ? error.message : 'Failed to add item. Please try again.'\n      })\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const resetForm = () => {\n    setFormData({\n      itemName: '',\n      description: '',\n      price: '',\n    })\n    setShowCreateForm(false)\n    setMessage(null)\n  }\n\n  const handleDeleteSecretMenuItem = async (itemId: string) => {\n    setIsDeleting(true)\n    setMessage(null)\n\n    try {\n      const result = await deleteSecretMenuItem(profile.user_id, itemId)\n      \n      if (result.success) {\n        setMessage({\n          type: 'success',\n          text: 'Secret menu item deleted successfully!'\n        })\n        setShowDeleteConfirmation(null)\n        // Remove item from local state\n        setSecretMenuItems(prev => prev.filter(item => \n          item.created_at !== itemId && item.itemName !== itemId\n        ))\n        router.refresh()\n      } else {\n        throw new Error(result.error || 'Failed to delete secret menu item')\n      }\n    } catch (error) {\n      console.error('Secret menu item deletion error:', error)\n      setMessage({\n        type: 'error',\n        text: error instanceof Error ? error.message : 'Failed to delete item. Please try again.'\n      })\n    } finally {\n      setIsDeleting(false)\n      setShowDeleteConfirmation(null)\n    }\n  }\n\n  // Plan limits\n  const isFreeTrial = profile.plan === 'starter'\n  const secretMenuLimit = isFreeTrial ? 3 : profile.plan === 'spotlight' ? 10 : 999\n  const currentItemCount = secretMenuItems.length\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Review Process Banner */}\n      <div className=\"bg-blue-900/30 border border-blue-500/30 rounded-lg p-4 mb-6\">\n        <div className=\"flex items-start gap-3\">\n          <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n            <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n          <div>\n            <h3 className=\"text-lg font-semibold text-blue-200 mb-1\">Review Process</h3>\n            <p className=\"text-blue-100 text-sm leading-relaxed\">\n              Offers, menus, secret menu items, and images can take <strong>up to 48 hours</strong> to be reviewed and go live on the QWIKKER database. You'll see the status update here once reviewed.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-white mb-2\">Secret Menu Management</h1>\n          <p className=\"text-gray-400\">Create exclusive items that only special customers know about</p>\n        </div>\n        <div className=\"text-right\">\n          <p className=\"text-sm text-gray-400\">\n            {currentItemCount} of {secretMenuLimit} secret items\n          </p>\n          {isFreeTrial && (\n            <p className=\"text-xs text-yellow-400\">\n              Free Trial: {secretMenuLimit} items maximum\n            </p>\n          )}\n        </div>\n      </div>\n\n      {message && (\n        <div className={`p-4 rounded-lg border ${\n          message.type === 'success' \n            ? 'bg-green-500/10 border-green-500/30 text-green-400'\n            : 'bg-red-500/10 border-red-500/30 text-red-400'\n        }`}>\n          {message.text}\n        </div>\n      )}\n\n      {/* Existing Secret Menu Items */}\n      {secretMenuItems.length > 0 && (\n        <Card className=\"bg-slate-800/50 border-slate-700\">\n          <CardHeader>\n            <CardTitle className=\"text-white flex items-center gap-2\">\n              <svg className=\"w-5 h-5 text-[#00d083]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n              </svg>\n              Your Secret Menu Items ({secretMenuItems.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {secretMenuItems.map((item, index) => (\n              <div key={item.id || index} className=\"bg-slate-700/30 rounded-lg p-4\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <h3 className=\"text-lg font-semibold text-white mb-2\">{item.itemName}</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                      {item.description && (\n                        <div className=\"md:col-span-2\">\n                          <span className=\"text-gray-400\">Description:</span>\n                          <p className=\"text-white mt-1\">{item.description}</p>\n                        </div>\n                      )}\n                      {item.price && (\n                        <div>\n                          <span className=\"text-gray-400\">Price:</span>\n                          <span className=\"text-white ml-2\">{item.price}</span>\n                        </div>\n                      )}\n                      <div>\n                        <span className=\"text-gray-400\">Added:</span>\n                        <span className=\"text-white ml-2\">\n                          {new Date(item.created_at).toLocaleDateString()}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex gap-2 ml-4\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      className=\"border-slate-600 text-gray-300 hover:bg-slate-700\"\n                      onClick={() => {\n                        // Pre-fill form for editing\n                        setFormData({\n                          itemName: item.itemName,\n                          description: item.description || '',\n                          price: item.price || '',\n                        })\n                        setShowCreateForm(true)\n                      }}\n                    >\n                      Edit\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      className=\"border-red-600 text-red-400 hover:bg-red-600/10\"\n                      onClick={() => setShowDeleteConfirmation(item.created_at || item.itemName)}\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            ))}\n            \n            {currentItemCount < secretMenuLimit && (\n              <div className=\"pt-4 border-t border-slate-600\">\n                <Button\n                  onClick={() => setShowCreateForm(true)}\n                  className=\"bg-gradient-to-r from-[#00d083] to-[#00b86f] hover:from-[#00b86f] hover:to-[#00a05c] text-white\"\n                >\n                  Add Another Secret Item\n                </Button>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Create New Secret Menu Item */}\n      {showCreateForm && (\n        <Card className=\"bg-slate-800/50 border-slate-700\">\n          <CardHeader>\n            <div className=\"flex justify-between items-center\">\n              <CardTitle className=\"text-white flex items-center gap-2\">\n                <svg className=\"w-5 h-5 text-[#00d083]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                Add Secret Menu Item\n              </CardTitle>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={resetForm}\n                className=\"border-slate-600 text-gray-300 hover:bg-slate-700\"\n              >\n                Cancel\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"itemName\" className=\"text-white\">Item Name *</Label>\n                  <Input\n                    id=\"itemName\"\n                    value={formData.itemName}\n                    onChange={(e) => handleInputChange('itemName', e.target.value)}\n                    className=\"bg-slate-900 text-white border-slate-600 focus:border-[#00d083]\"\n                    placeholder=\"e.g., The Founder's Special, Hidden Gem Latte\"\n                    required\n                  />\n                  <p className=\"text-xs text-gray-400 mt-1\">\n                    Give your secret item an intriguing name that customers will remember\n                  </p>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"description\" className=\"text-white\">Description</Label>\n                  <textarea\n                    id=\"description\"\n                    value={formData.description}\n                    onChange={(e) => handleInputChange('description', e.target.value)}\n                    className=\"flex w-full rounded-md border border-slate-600 bg-slate-900 px-3 py-2 text-white placeholder:text-gray-400 focus:border-[#00d083] focus:ring-[3px] focus:ring-[#00d083]/20 focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 min-h-[100px] resize-none\"\n                    placeholder=\"Describe what makes this item special, its ingredients, or why it's exclusive...\"\n                  />\n                  <p className=\"text-xs text-gray-400 mt-1\">\n                    Help customers understand what makes this item unique and worth trying\n                  </p>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"price\" className=\"text-white\">Price</Label>\n                  <Input\n                    id=\"price\"\n                    value={formData.price}\n                    onChange={(e) => handleInputChange('price', e.target.value)}\n                    className=\"bg-slate-900 text-white border-slate-600 focus:border-[#00d083]\"\n                    placeholder=\"e.g., Â£12.50, Market Price, Ask for pricing\"\n                  />\n                  <p className=\"text-xs text-gray-400 mt-1\">\n                    Optional - leave blank if price varies or is discussed in person\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"bg-slate-700/30 rounded-lg p-4\">\n                <div className=\"flex items-start gap-3\">\n                  <div className=\"w-10 h-10 bg-purple-500/10 rounded-full flex items-center justify-center flex-shrink-0\">\n                    <svg className=\"w-5 h-5 text-purple-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h4 className=\"text-white font-medium mb-1\">Secret Menu Strategy</h4>\n                    <p className=\"text-sm text-gray-400\">\n                      Secret menu items create exclusivity and word-of-mouth marketing. They're perfect for:\n                    </p>\n                    <ul className=\"text-sm text-gray-400 mt-2 space-y-1\">\n                      <li>â€¢ Seasonal or limited-time specials</li>\n                      <li>â€¢ Items for regular customers or VIPs</li>\n                      <li>â€¢ Creative combinations not on the main menu</li>\n                      <li>â€¢ Testing new items before adding to main menu</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end gap-4\">\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={resetForm}\n                  className=\"border-slate-600 text-gray-300 hover:bg-slate-700\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  type=\"submit\"\n                  disabled={isLoading || currentItemCount >= secretMenuLimit}\n                  className=\"bg-gradient-to-r from-[#00d083] to-[#00b86f] hover:from-[#00b86f] hover:to-[#00a05c] text-white px-8\"\n                >\n                  {isLoading ? 'Adding...' : 'Add Secret Item'}\n                </Button>\n              </div>\n            </form>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* No Secret Items Yet */}\n      {secretMenuItems.length === 0 && !showCreateForm && (\n        <Card className=\"bg-slate-800/50 border-slate-700\">\n          <CardContent className=\"text-center py-12\">\n            <div className=\"w-16 h-16 mx-auto mb-4 bg-slate-700 rounded-full flex items-center justify-center\">\n              <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n              </svg>\n            </div>\n            <h3 className=\"text-lg font-medium text-white mb-2\">No Secret Menu Items Yet</h3>\n            <p className=\"text-gray-400 mb-6\">\n              Create exclusive items that only your special customers know about\n            </p>\n            <Button\n              onClick={() => setShowCreateForm(true)}\n              disabled={currentItemCount >= secretMenuLimit}\n              className=\"bg-gradient-to-r from-[#00d083] to-[#00b86f] hover:from-[#00b86f] hover:to-[#00a05c] text-white\"\n            >\n              Create Your First Secret Item\n            </Button>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Plan Upgrade Notice */}\n      {isFreeTrial && currentItemCount >= secretMenuLimit && (\n        <Card className=\"bg-slate-800/50 border-slate-700\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"w-12 h-12 bg-yellow-500/10 rounded-full flex items-center justify-center\">\n                <svg className=\"w-6 h-6 text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.98-.833-2.75 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                </svg>\n              </div>\n              <div className=\"flex-1\">\n                <h3 className=\"font-semibold text-white mb-1\">Secret Menu Limit Reached</h3>\n                <p className=\"text-sm text-gray-400\">\n                  You've reached the maximum of {secretMenuLimit} secret items for the Free Trial plan. \n                  Upgrade to Spotlight for up to 10 items or Pro for unlimited secret menu items.\n                </p>\n              </div>\n              <Button\n                onClick={() => router.push('/dashboard/settings')}\n                className=\"bg-gradient-to-r from-[#00d083] to-[#00b86f] hover:from-[#00b86f] hover:to-[#00a05c] text-white\"\n              >\n                Upgrade Plan\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Delete Confirmation Dialog */}\n      {showDeleteConfirmation && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n          <Card className=\"bg-slate-800 border-slate-700 max-w-md w-full mx-4\">\n            <CardHeader>\n              <CardTitle className=\"text-white flex items-center gap-2\">\n                <svg className=\"w-5 h-5 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.98-.833-2.75 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                </svg>\n                Delete Secret Menu Item\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <p className=\"text-gray-300\">\n                Are you sure you want to delete this secret menu item? \n                This action cannot be undone.\n              </p>\n              <div className=\"flex justify-end gap-3\">\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setShowDeleteConfirmation(null)}\n                  disabled={isDeleting}\n                  className=\"border-slate-600 text-gray-300 hover:bg-slate-700\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleDeleteSecretMenuItem(showDeleteConfirmation)}\n                  disabled={isDeleting}\n                  className=\"bg-red-600 hover:bg-red-700 text-white\"\n                >\n                  {isDeleting ? 'Deleting...' : 'Delete Item'}\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}